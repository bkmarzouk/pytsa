//#This file is part of PyTransport.

//#PyTransport is free software: you can redistribute it and/or modify
//#it under the terms of the GNU General Public License as published by
//#the Free Software Foundation, either version 3 of the License, or
//#(at your option) any later version.

//#PyTransport is distributed in the hope that it will be useful,
//#but WITHOUT ANY WARRANTY; without even the implied warranty of
//#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//#GNU General Public License for more details.

//#You should have received a copy of the GNU General Public License
//#along with PyTransport.  If not, see <http://www.gnu.org/licenses/>.

// This file contains a prototype of the potential.h file of PyTransport -- it is edited by the PyTransScripts module

#ifndef POTENTIAL_H  // Prevents the class being re-defined
#define POTENTIAL_H


#include <iostream>
#include <math.h>
#include <cmath>
#include <vector>

using namespace std;

// #Rewrite
// Potential file rewriten at Fri Dec 13 09:39:10 2019

class potential
{
private:
	int nF; // field number
	int nP; // params number which definFs potential
    
    
public:
	// flow constructor
	potential()
	{
// #FP
nF=6;
nP=32;

//        p.resize(nP);
        
// pdef

    }
	
    //void setP(vector<double> pin){
    //    p=pin;
    //}
	//calculates V()
	double V(vector<double> f, vector<double> p)
	{
		double sum ;
        
// Pot
  auto x0 = p[0]*std::pow(p[1], 4);
  auto x1 = 2*x0;
  auto x2 = std::pow(p[3], 2)*(p[4] + x1);
  auto x3 = std::pow(f[0], 2)*x2;
  auto x4 = std::cos(f[2]);
  auto x5 = p[2]/std::pow(M_PI, 3.0/2.0);
  auto x6 = x4*x5;
  auto x7 = (9.0/4.0)*x3;
  auto x8 = std::cos(f[1]);
  auto x9 = x5*x8;
  auto x10 = x2*(3*std::pow(x8, 2) - 1);
  auto x11 = (3.0/8.0)*std::sqrt(15)*std::pow(f[0], -2 + 2*std::sqrt(10))*x5;
  auto x12 = x2*(3*std::pow(x4, 2) - 1);
  auto x13 = std::sqrt(3)*x2;
  auto x14 = (9.0/8.0)*std::sqrt(5);
  auto x15 = std::pow(f[0], -2 + 2*std::sqrt(13))*x14;
  auto x16 = (1.0/2.0)*f[3] - 1.0/2.0*f[4] + (1.0/2.0)*f[5];
  auto x17 = std::cos(x16);
  auto x18 = std::sin(x16);
  auto x19 = x13*x5;
  auto x20 = std::sin(f[1]);
  auto x21 = std::sin(f[2]);
  auto x22 = std::tan((1.0/2.0)*f[1]);
  auto x23 = std::tan((1.0/2.0)*f[2]);
  auto x24 = std::sqrt(x20)*std::sqrt(x21)*std::sqrt(x23)/std::sqrt(x22);
  auto x25 = x19*x24;
  auto x26 = (3.0/2.0)*f[3] - 3.0/2.0*f[4] + (3.0/2.0)*f[5];
  auto x27 = x2*x5;
  auto x28 = x24*x27;
  auto x29 = (9.0/4.0)*std::pow(f[0], -2 + (1.0/2.0)*std::sqrt(241))*x28;
  auto x30 = f[3] - f[4] + f[5];
  auto x31 = std::cos(x30);
  auto x32 = std::sin(x30);
  auto x33 = 1.0/x22;
  auto x34 = x21*x23*x33;
  auto x35 = std::pow(f[0], 5)*x14*x27;
  auto x36 = (9.0/4.0)*x4 + 3.0/4.0;
  auto x37 = std::sqrt(6)*std::pow(f[0], 7.0/2.0)*x28;
  auto x38 = 3*x8 - 1;
  sum=(3.0/4.0)*std::pow(f[0], 9.0/2.0)*x19*std::pow(x20, 3.0/2.0)*std::pow(x21, 3.0/2.0)*std::pow(x23, 3.0/2.0)*(p[20]*std::cos(x26) - p[30]*std::sin(x26))/std::pow(x22, 3.0/2.0) + (3.0/2.0)*std::pow(f[0], 3.0/2.0)*x25*(p[15]*x17 - p[25]*x18) + (9.0/8.0)*std::pow(f[0], 3)*x19*x20*x34*(p[12]*x31 - p[22]*x32) + std::pow(f[0], -2 + (1.0/2.0)*std::sqrt(193))*x25*x36*x38*(p[19]*x17 - p[29]*x18) + (9.0/4.0)*std::pow(f[0], -2 + 2*std::sqrt(7))*p[8]*x13*x6*x8 + p[10]*x10*x11 + p[11]*x10*x15*x6 + p[5]*x6*x7 + p[6]*x11*x12 + p[7]*x7*x9 + p[9]*x12*x15*x9 + x1*(1 - 27.0/32.0*x0/(std::pow(M_PI, 2)*std::pow(f[0], 4)*std::pow(p[3], 4))) + x20*x23*x33*x35*(x21 + std::sin(2*f[2]))*(p[13]*x31 - p[23]*x32) + x29*(p[17]*x17 - p[27]*x18)*(-5*std::pow(x21, 2) + 2*x4 + 4) + x29*(-p[21]*x17 + p[31]*x18)*(5*std::pow(x20, 2) + 2*x8 - 4) + (1.0/3.0)*x3 + x34*x35*(x20 - std::sin(2*f[1]))*(-p[14]*x31 + p[24]*x32) + x36*x37*(p[16]*x17 - p[26]*x18) + (3.0/4.0)*x37*x38*(p[18]*x17 - p[28]*x18);
         return sum;
	}
	
	//calculates V'()
	vector<double> dV(vector<double> f, vector<double> p)
	{
		vector<double> sum(nF,0.0);
	
// dPot
  auto x0 = std::pow(p[3], 2)*(2*p[0]*std::pow(p[1], 4) + p[4]);
  auto x1 = f[0]*x0;
  auto x2 = std::pow(f[0], 5);
  auto x3 = std::cos(f[2]);
  auto x4 = p[2]/std::pow(M_PI, 3.0/2.0);
  auto x5 = p[5]*x4;
  auto x6 = (9.0/2.0)*x1;
  auto x7 = std::cos(f[1]);
  auto x8 = p[7]*x4;
  auto x9 = x0*x4;
  auto x10 = x9*(3*std::pow(x7, 2) - 1);
  auto x11 = 1.0/f[0];
  auto x12 = -2 + 2*std::sqrt(10);
  auto x13 = std::sqrt(15)*std::pow(f[0], x12);
  auto x14 = (3.0/8.0)*x11*x12*x13;
  auto x15 = x9*(3*std::pow(x3, 2) - 1);
  auto x16 = -2 + 2*std::sqrt(7);
  auto x17 = std::sqrt(3);
  auto x18 = (9.0/4.0)*x0;
  auto x19 = x18*x4;
  auto x20 = x17*x19;
  auto x21 = std::pow(f[0], x16)*p[8]*x20;
  auto x22 = x21*x7;
  auto x23 = x11*x3;
  auto x24 = (1.0/2.0)*f[3] - 1.0/2.0*f[4] + (1.0/2.0)*f[5];
  auto x25 = std::cos(x24);
  auto x26 = std::sin(x24);
  auto x27 = p[15]*x25 - p[25]*x26;
  auto x28 = std::sin(f[1]);
  auto x29 = std::sqrt(x28);
  auto x30 = std::sin(f[2]);
  auto x31 = std::sqrt(x30);
  auto x32 = std::tan((1.0/2.0)*f[1]);
  auto x33 = std::pow(x32, -1.0/2.0);
  auto x34 = std::tan((1.0/2.0)*f[2]);
  auto x35 = std::sqrt(x34);
  auto x36 = x31*x33*x35;
  auto x37 = x29*x36;
  auto x38 = std::sqrt(5);
  auto x39 = -2 + 2*std::sqrt(13);
  auto x40 = std::pow(f[0], x39)*x38;
  auto x41 = p[11]*x40;
  auto x42 = x10*x41;
  auto x43 = (9.0/8.0)*x39;
  auto x44 = p[9]*x40;
  auto x45 = x15*x44;
  auto x46 = std::pow(f[0], 2);
  auto x47 = f[3] - f[4] + f[5];
  auto x48 = std::cos(x47);
  auto x49 = std::sin(x47);
  auto x50 = p[12]*x48 - p[22]*x49;
  auto x51 = (27.0/8.0)*x17;
  auto x52 = x9/x32;
  auto x53 = x34*x52;
  auto x54 = x30*x53;
  auto x55 = std::pow(f[0], 7.0/2.0);
  auto x56 = std::pow(x28, 3.0/2.0);
  auto x57 = x55*x56;
  auto x58 = (3.0/2.0)*f[3] - 3.0/2.0*f[4] + (3.0/2.0)*f[5];
  auto x59 = std::cos(x58);
  auto x60 = std::sin(x58);
  auto x61 = p[20]*x59 - p[30]*x60;
  auto x62 = std::pow(x30, 3.0/2.0);
  auto x63 = std::pow(x34, 3.0/2.0);
  auto x64 = std::pow(x32, -3.0/2.0);
  auto x65 = x64*x9;
  auto x66 = x62*x63*x65;
  auto x67 = x61*x66;
  auto x68 = (45.0/8.0)*std::pow(f[0], 4);
  auto x69 = 2*f[1];
  auto x70 = x28 - std::sin(x69);
  auto x71 = x38*(-p[14]*x48 + p[24]*x49);
  auto x72 = x70*x71;
  auto x73 = x38*x53;
  auto x74 = p[13]*x48 - p[23]*x49;
  auto x75 = 2*f[2];
  auto x76 = x30 + std::sin(x75);
  auto x77 = x74*x76;
  auto x78 = x73*x77;
  auto x79 = p[16]*x25 - p[26]*x26;
  auto x80 = 3*x3 + 1;
  auto x81 = std::sqrt(6);
  auto x82 = x37*x9;
  auto x83 = x81*x82;
  auto x84 = x80*x83;
  auto x85 = (21.0/8.0)*std::pow(f[0], 5.0/2.0);
  auto x86 = p[18]*x25 - p[28]*x26;
  auto x87 = 3*x7 - 1;
  auto x88 = x83*x87;
  auto x89 = 2*x3 - 5*std::pow(x30, 2) + 4;
  auto x90 = p[17]*x25 - p[27]*x26;
  auto x91 = -2 + (1.0/2.0)*std::sqrt(241);
  auto x92 = std::pow(f[0], x91);
  auto x93 = x19*x92;
  auto x94 = x37*x93;
  auto x95 = x90*x94;
  auto x96 = x11*x91;
  auto x97 = 5*std::pow(x28, 2) + 2*x7 - 4;
  auto x98 = -p[21]*x25 + p[31]*x26;
  auto x99 = x94*x98;
  auto x100 = p[19]*x25 - p[29]*x26;
  auto x101 = -2 + (1.0/2.0)*std::sqrt(193);
  auto x102 = (3.0/4.0)*x17;
  auto x103 = std::pow(f[0], x101);
  auto x104 = x103*x87;
  auto x105 = x104*x80;
  auto x106 = x102*x105;
  auto x107 = x106*x82;
  auto x108 = x18*x46;
  auto x109 = x28*x7;
  auto x110 = x13*x19;
  auto x111 = x28*x3;
  auto x112 = (9.0/8.0)*x28;
  auto x113 = (27.0/4.0)*x9;
  auto x114 = x19*x81;
  auto x115 = x36*x86;
  auto x116 = (9.0/8.0)*x30;
  auto x117 = x116*x53;
  auto x118 = std::pow(f[0], 3)*x17;
  auto x119 = x118*x50;
  auto x120 = (9.0/8.0)*x2;
  auto x121 = x36*x80;
  auto x122 = x100*x103*x20;
  auto x123 = std::pow(f[0], 3.0/2.0);
  auto x124 = (3.0/2.0)*x123*x17;
  auto x125 = x124*x27;
  auto x126 = x31*x65;
  auto x127 = std::pow(x32, 2);
  auto x128 = x29*x35;
  auto x129 = x128*(-1.0/4.0*x127 - 1.0/4.0);
  auto x130 = x126*x129;
  auto x131 = x7/x29;
  auto x132 = x131*x36;
  auto x133 = x102*x9;
  auto x134 = x123*x133*x27;
  auto x135 = x61*x63;
  auto x136 = std::pow(f[0], 9.0/2.0);
  auto x137 = x136*x56;
  auto x138 = x102*x137;
  auto x139 = x138*x62;
  auto x140 = x89*x90;
  auto x141 = x31*x93;
  auto x142 = x129*x141*x64;
  auto x143 = x97*x98;
  auto x144 = x119*x30;
  auto x145 = x34*x9*(-1.0/2.0*x127 - 1.0/2.0)/x127;
  auto x146 = x112*x145;
  auto x147 = (9.0/8.0)*x17;
  auto x148 = x116*x2;
  auto x149 = x148*x72;
  auto x150 = x2*x38*x77;
  auto x151 = (9.0/8.0)*x9*x92;
  auto x152 = x132*x151;
  auto x153 = x130*x81;
  auto x154 = x55*x79;
  auto x155 = x154*x80;
  auto x156 = (3.0/4.0)*x155;
  auto x157 = (3.0/4.0)*x55;
  auto x158 = x86*x87;
  auto x159 = x157*x158;
  auto x160 = (3.0/8.0)*x9;
  auto x161 = x160*x81;
  auto x162 = x131*x161;
  auto x163 = x100*x160*x17;
  auto x164 = x3*x30;
  auto x165 = x128*x33;
  auto x166 = x165*x62;
  auto x167 = std::pow(x34, 2);
  auto x168 = x52*((1.0/2.0)*x167 + 1.0/2.0);
  auto x169 = x112*x168;
  auto x170 = x112*x2*x73;
  auto x171 = x29*x33*((1.0/4.0)*x167 + 1.0/4.0)/x35;
  auto x172 = x171*x31;
  auto x173 = x172*x9;
  auto x174 = x165*x3/x31;
  auto x175 = x141*x171;
  auto x176 = x151*x174;
  auto x177 = x173*x81;
  auto x178 = x161*x174;
  auto x179 = (1.0/2.0)*x26;
  auto x180 = p[15]*x179;
  auto x181 = (1.0/2.0)*x25;
  auto x182 = p[25]*x181;
  auto x183 = x124*x82;
  auto x184 = (3.0/2.0)*p[20]*x60;
  auto x185 = (3.0/2.0)*p[30]*x59;
  auto x186 = x138*x66;
  auto x187 = p[21]*x179;
  auto x188 = p[31]*x181;
  auto x189 = x94*x97;
  auto x190 = p[17]*x179;
  auto x191 = p[27]*x181;
  auto x192 = x89*x94;
  auto x193 = p[12]*x49;
  auto x194 = p[22]*x48;
  auto x195 = x112*x118*x54;
  auto x196 = p[14]*x49;
  auto x197 = p[24]*x48;
  auto x198 = x148*x70*x73;
  auto x199 = p[13]*x49;
  auto x200 = p[23]*x48;
  auto x201 = x170*x76;
  auto x202 = p[16]*x179;
  auto x203 = p[26]*x181;
  auto x204 = x157*x84;
  auto x205 = p[18]*x179;
  auto x206 = p[28]*x181;
  auto x207 = x157*x88;
  auto x208 = p[19]*x179;
  auto x209 = p[29]*x181;
  auto x210 = x107*(-x208 - x209) + x183*(-x180 - x182) + x186*(-x184 - x185) + x189*(x187 + x188) + x192*(-x190 - x191) + x195*(-x193 - x194) + x198*(x196 + x197) + x201*(-x199 - x200) + x204*(-x202 - x203) + x207*(-x205 - x206);

 sum[0]=std::sqrt(f[0])*x20*x27*x37 + (27.0/4.0)*std::pow(p[0], 2)*std::pow(p[1], 8)/(std::pow(M_PI, 2)*std::pow(p[3], 4)*x2) + p[10]*x10*x14 + p[6]*x14*x15 + (2.0/3.0)*x1 + x100*x101*x107*x11 + x11*x43*x45*x7 + x16*x22*x23 + x23*x42*x43 + x28*x46*x50*x51*x54 + x28*x68*x78 + x3*x5*x6 + x51*x57*x67 + x54*x68*x72 + x6*x7*x8 + x79*x84*x85 + x85*x86*x88 + x89*x95*x96 + x96*x97*x99;

 sum[1]=-p[10]*x109*x110 + x100*x106*x130 + x104*x121*x131*x163 - x108*x28*x8 - x109*x113*x3*x41 - x111*x21 - x112*x45 - x114*x115*x57 + x115*x162*x55*x87 + x117*x119*x7 + x117*x2*x71*(x7 - 2*std::cos(x69)) + x120*x7*x78 - x121*x122*x56 + x121*x154*x162 + x125*x130 + x132*x134 + x135*x139*x9*(-3.0/4.0*x127 - 3.0/4.0)/std::pow(x32, 5.0/2.0) + x136*x147*x29*x67*x7 + x140*x142 + x140*x152 + x142*x143 + x143*x152 + x144*x146 + x145*x149 + x146*x150 + x153*x156 + x153*x159 + x99*(10*x109 - 2*x28);

 sum[2]=-p[6]*x110*x164 + x100*x105*x133*x172 + x105*x163*x174 - x108*x30*x5 + (9.0/8.0)*x111*x119*x53 - x113*x164*x44*x7 - x114*x154*x166 - x116*x42 + x120*x3*x53*x72 - x122*x166*x87 + x125*x173 + x126*x135*x137*x147*x3 + x134*x174 + x139*x35*x61*x65*((3.0/4.0)*x167 + 3.0/4.0) + x140*x175 + x140*x176 + x143*x175 + x143*x176 + x144*x169 + x149*x168 + x150*x169 + x155*x178 + x156*x177 + x158*x178*x55 + x159*x177 + x170*x74*(x3 + 2*std::cos(x75)) - x22*x30 + x95*(-10*x164 - 2*x30);

 sum[3]=x210;

 sum[4]=x107*(x208 + x209) + x183*(x180 + x182) + x186*(x184 + x185) + x189*(-x187 - x188) + x192*(x190 + x191) + x195*(x193 + x194) + x198*(-x196 - x197) + x201*(x199 + x200) + x204*(x202 + x203) + x207*(x205 + x206);

 sum[5]=x210;
        
		return sum;
	}
    
	// calculates V''
	vector<double> dVV(vector<double> f, vector<double> p)
	{
		vector<double> sum(nF*nF,0.0);
		
// ddPot
  auto x0 = std::pow(p[3], 2)*(2*p[0]*std::pow(p[1], 4) + p[4]);
  auto x1 = (2.0/3.0)*x0;
  auto x2 = std::pow(p[0], 2)*std::pow(p[1], 8)/(std::pow(M_PI, 2)*std::pow(p[3], 4));
  auto x3 = std::cos(f[2]);
  auto x4 = p[2]*x0/std::pow(M_PI, 3.0/2.0);
  auto x5 = (9.0/2.0)*x4;
  auto x6 = p[5]*x5;
  auto x7 = x3*x6;
  auto x8 = std::cos(f[1]);
  auto x9 = p[7]*x5;
  auto x10 = x8*x9;
  auto x11 = -2 + 2*std::sqrt(10);
  auto x12 = std::pow(f[0], 2);
  auto x13 = 1.0/x12;
  auto x14 = std::sqrt(15)*std::pow(f[0], x11);
  auto x15 = x13*x14;
  auto x16 = x11*x15;
  auto x17 = std::pow(x8, 2);
  auto x18 = 3*x17 - 1;
  auto x19 = (3.0/8.0)*x4;
  auto x20 = p[10]*x18*x19;
  auto x21 = std::pow(x3, 2);
  auto x22 = x4*(3*x21 - 1);
  auto x23 = (3.0/8.0)*p[6]*x22;
  auto x24 = std::pow(x11, 2)*x15;
  auto x25 = -2 + 2*std::sqrt(7);
  auto x26 = (9.0/4.0)*x4;
  auto x27 = x26*x3;
  auto x28 = std::pow(f[0], x25)*p[8];
  auto x29 = std::sqrt(3);
  auto x30 = x29*x8;
  auto x31 = x27*x28*x30;
  auto x32 = x13*x31;
  auto x33 = -2 + 2*std::sqrt(13);
  auto x34 = std::pow(f[0], x33);
  auto x35 = (9.0/8.0)*x34;
  auto x36 = x18*x35;
  auto x37 = std::sqrt(5);
  auto x38 = x37*x4;
  auto x39 = p[11]*x38;
  auto x40 = x3*x39;
  auto x41 = x36*x40;
  auto x42 = x13*x33;
  auto x43 = x22*x35;
  auto x44 = p[9]*x8;
  auto x45 = x37*x43*x44;
  auto x46 = x13*std::pow(x33, 2);
  auto x47 = std::sqrt(f[0]);
  auto x48 = x29*x4;
  auto x49 = (9.0/8.0)*x48;
  auto x50 = (1.0/2.0)*f[3] - 1.0/2.0*f[4] + (1.0/2.0)*f[5];
  auto x51 = std::cos(x50);
  auto x52 = p[15]*x51;
  auto x53 = std::sin(x50);
  auto x54 = p[25]*x53;
  auto x55 = x52 - x54;
  auto x56 = std::sin(f[2]);
  auto x57 = std::sqrt(x56);
  auto x58 = std::tan((1.0/2.0)*f[2]);
  auto x59 = std::sqrt(x58);
  auto x60 = x57*x59;
  auto x61 = std::sin(f[1]);
  auto x62 = std::sqrt(x61);
  auto x63 = std::tan((1.0/2.0)*f[1]);
  auto x64 = std::pow(x63, -1.0/2.0);
  auto x65 = x62*x64;
  auto x66 = x60*x65;
  auto x67 = x55*x66;
  auto x68 = f[0]*x61;
  auto x69 = x29*x56;
  auto x70 = 1.0/x63;
  auto x71 = x58*x70;
  auto x72 = f[3] - f[4] + f[5];
  auto x73 = std::cos(x72);
  auto x74 = p[12]*x73;
  auto x75 = std::sin(x72);
  auto x76 = p[22]*x75;
  auto x77 = x74 - x76;
  auto x78 = x4*x77;
  auto x79 = x71*x78;
  auto x80 = x69*x79;
  auto x81 = std::pow(f[0], 3);
  auto x82 = (45.0/2.0)*x81;
  auto x83 = 2*f[1];
  auto x84 = std::sin(x83);
  auto x85 = x61 - x84;
  auto x86 = p[24]*x75;
  auto x87 = p[14]*x73;
  auto x88 = x86 - x87;
  auto x89 = x85*x88;
  auto x90 = x38*x71;
  auto x91 = x56*x90;
  auto x92 = x89*x91;
  auto x93 = p[13]*x73;
  auto x94 = p[23]*x75;
  auto x95 = x93 - x94;
  auto x96 = 2*f[2];
  auto x97 = std::sin(x96);
  auto x98 = x56 + x97;
  auto x99 = x95*x98;
  auto x100 = x37*x61;
  auto x101 = x4*x71;
  auto x102 = x100*x101;
  auto x103 = x102*x99;
  auto x104 = std::pow(f[0], 5.0/2.0);
  auto x105 = std::pow(x61, 3.0/2.0);
  auto x106 = x104*x105;
  auto x107 = std::pow(x63, -3.0/2.0);
  auto x108 = x107*x48;
  auto x109 = (3.0/2.0)*f[3] - 3.0/2.0*f[4] + (3.0/2.0)*f[5];
  auto x110 = std::cos(x109);
  auto x111 = p[20]*x110;
  auto x112 = std::sin(x109);
  auto x113 = p[30]*x112;
  auto x114 = x111 - x113;
  auto x115 = std::pow(x56, 3.0/2.0);
  auto x116 = std::pow(x58, 3.0/2.0);
  auto x117 = x115*x116;
  auto x118 = x114*x117;
  auto x119 = x108*x118;
  auto x120 = std::sqrt(6);
  auto x121 = p[16]*x51;
  auto x122 = p[26]*x53;
  auto x123 = x120*(x121 - x122);
  auto x124 = 3*x3 + 1;
  auto x125 = x4*x66;
  auto x126 = x124*x125;
  auto x127 = std::pow(f[0], 3.0/2.0);
  auto x128 = (105.0/16.0)*x127;
  auto x129 = p[18]*x51;
  auto x130 = p[28]*x53;
  auto x131 = x120*(x129 - x130);
  auto x132 = 3*x8 - 1;
  auto x133 = x125*x132;
  auto x134 = x131*x133;
  auto x135 = -2 + (1.0/2.0)*std::sqrt(241);
  auto x136 = x13*x135;
  auto x137 = std::pow(x56, 2);
  auto x138 = 2*x3;
  auto x139 = -5*x137 + x138 + 4;
  auto x140 = p[17]*x51;
  auto x141 = p[27]*x53;
  auto x142 = x140 - x141;
  auto x143 = std::pow(f[0], x135);
  auto x144 = x26*x66;
  auto x145 = x143*x144;
  auto x146 = x142*x145;
  auto x147 = x139*x146;
  auto x148 = 2*x8;
  auto x149 = std::pow(x61, 2);
  auto x150 = x148 + 5*x149 - 4;
  auto x151 = p[31]*x53;
  auto x152 = p[21]*x51;
  auto x153 = x143*(x151 - x152);
  auto x154 = x150*x153;
  auto x155 = x144*x154;
  auto x156 = x13*std::pow(x135, 2);
  auto x157 = -2 + (1.0/2.0)*std::sqrt(193);
  auto x158 = (3.0/4.0)*x48;
  auto x159 = x158*x66;
  auto x160 = std::pow(f[0], x157);
  auto x161 = p[19]*x51;
  auto x162 = p[29]*x53;
  auto x163 = x160*(x161 - x162);
  auto x164 = x132*x163;
  auto x165 = x124*x164;
  auto x166 = x159*x165;
  auto x167 = x13*x166;
  auto x168 = 1.0/f[0];
  auto x169 = x12*x26;
  auto x170 = p[7]*x169;
  auto x171 = x61*x8;
  auto x172 = x14*x26;
  auto x173 = p[10]*x172;
  auto x174 = x171*x173;
  auto x175 = x29*x61;
  auto x176 = x175*x27;
  auto x177 = x176*x28;
  auto x178 = p[9]*x100;
  auto x179 = x178*x43;
  auto x180 = (27.0/4.0)*x34;
  auto x181 = x180*x40;
  auto x182 = x171*x181;
  auto x183 = x60*x64;
  auto x184 = x131*x183;
  auto x185 = std::pow(f[0], 7.0/2.0);
  auto x186 = x105*x185;
  auto x187 = x186*x26;
  auto x188 = 10*x171 - 2*x61;
  auto x189 = x153*x188;
  auto x190 = x144*x189;
  auto x191 = (9.0/8.0)*x8;
  auto x192 = x191*x81;
  auto x193 = std::pow(f[0], 5);
  auto x194 = (9.0/8.0)*x193;
  auto x195 = x8 - 2*std::cos(x83);
  auto x196 = x195*x88*x91;
  auto x197 = x90*x99;
  auto x198 = x191*x193;
  auto x199 = x105*x163;
  auto x200 = x124*x199;
  auto x201 = x183*x29;
  auto x202 = x201*x26;
  auto x203 = x200*x202;
  auto x204 = std::pow(x63, 2);
  auto x205 = -1.0/4.0*x204 - 1.0/4.0;
  auto x206 = x205*x60;
  auto x207 = x206*x62;
  auto x208 = x108*x207;
  auto x209 = x127*x55;
  auto x210 = (3.0/2.0)*x209;
  auto x211 = (3.0/4.0)*x209;
  auto x212 = x30*x4;
  auto x213 = 1.0/x62;
  auto x214 = x183*x213;
  auto x215 = x212*x214;
  auto x216 = std::pow(f[0], 9.0/2.0);
  auto x217 = x105*x216;
  auto x218 = (3.0/4.0)*x217;
  auto x219 = -3.0/4.0*x204 - 3.0/4.0;
  auto x220 = x219/std::pow(x63, 5.0/2.0);
  auto x221 = x118*x220;
  auto x222 = x221*x48;
  auto x223 = x142*x143;
  auto x224 = x139*x223;
  auto x225 = x107*x207;
  auto x226 = x225*x26;
  auto x227 = x224*x226;
  auto x228 = x154*x226;
  auto x229 = (9.0/8.0)*x81;
  auto x230 = x175*x56;
  auto x231 = x230*x78;
  auto x232 = -1.0/2.0*x204 - 1.0/2.0;
  auto x233 = x232/x204;
  auto x234 = x233*x58;
  auto x235 = x231*x234;
  auto x236 = x107*x118;
  auto x237 = x216*x62;
  auto x238 = (9.0/8.0)*x212;
  auto x239 = x237*x238;
  auto x240 = x38*x56*x89;
  auto x241 = x194*x234;
  auto x242 = x100*x4;
  auto x243 = x242*x99;
  auto x244 = x224*x4;
  auto x245 = x191*x214;
  auto x246 = x244*x245;
  auto x247 = x154*x4;
  auto x248 = x245*x247;
  auto x249 = x225*x4;
  auto x250 = x123*x185;
  auto x251 = x124*x250;
  auto x252 = (3.0/4.0)*x251;
  auto x253 = (3.0/4.0)*x185;
  auto x254 = x131*x132;
  auto x255 = x249*x254;
  auto x256 = x214*x8;
  auto x257 = x19*x251;
  auto x258 = x132*x184;
  auto x259 = x185*x8;
  auto x260 = x19*x259;
  auto x261 = x213*x260;
  auto x262 = (3.0/4.0)*x208;
  auto x263 = x165*x262;
  auto x264 = x19*x30;
  auto x265 = x214*x264;
  auto x266 = x165*x265;
  auto x267 = -x170*x61 - x174 - x177 - x179 - x182 - x184*x187 + x190 + x192*x80 + x194*x196 + x197*x198 - x203 + x208*x210 + x211*x215 + x218*x222 + x227 + x228 + x229*x235 + x236*x239 + x240*x241 + x241*x243 + x246 + x248 + x249*x252 + x253*x255 + x256*x257 + x258*x261 + x263 + x266;
  auto x268 = (63.0/8.0)*x4;
  auto x269 = x11*x168;
  auto x270 = x168*x25;
  auto x271 = x168*x33;
  auto x272 = (27.0/8.0)*x12;
  auto x273 = (45.0/8.0)*std::pow(f[0], 4);
  auto x274 = x29*x47;
  auto x275 = x26*x274;
  auto x276 = x47*x55;
  auto x277 = (27.0/8.0)*x186;
  auto x278 = x234*x273;
  auto x279 = x185*x62;
  auto x280 = x135*x168;
  auto x281 = x104*x123;
  auto x282 = (21.0/8.0)*x281;
  auto x283 = x124*x249;
  auto x284 = (21.0/8.0)*x104;
  auto x285 = x124*x4;
  auto x286 = (21.0/16.0)*x104;
  auto x287 = x213*x4;
  auto x288 = x287*x8;
  auto x289 = x157*x168;
  auto x290 = -x106*x184*x268 - x168*x267 - x174*x269 - x177*x270 - x179*x271 - x182*x271 + x190*x280 + x196*x273 + x197*x273*x8 - x203*x289 + (81.0/16.0)*x212*x236*x279 + (9.0/8.0)*x215*x276 + x222*x277 + x225*x275*x55 + x227*x280 + x228*x280 + x235*x272 + x240*x278 + x243*x278 + x246*x280 + x248*x280 + x255*x284 + (21.0/16.0)*x256*x281*x285 + x258*x286*x288 + x263*x289 + x266*x289 + x272*x8*x80 + x282*x283 - x68*x9;
  auto x291 = p[5]*x169;
  auto x292 = x3*x56;
  auto x293 = p[6]*x172;
  auto x294 = x292*x293;
  auto x295 = x26*x8;
  auto x296 = x295*x69;
  auto x297 = x28*x296;
  auto x298 = x39*x56;
  auto x299 = x298*x36;
  auto x300 = x180*x38*x44;
  auto x301 = x292*x300;
  auto x302 = x115*x59;
  auto x303 = x26*x65;
  auto x304 = x302*x303;
  auto x305 = -10*x292 - 2*x56;
  auto x306 = x146*x305;
  auto x307 = std::pow(x58, 2);
  auto x308 = (1.0/2.0)*x307 + 1.0/2.0;
  auto x309 = x308*x70;
  auto x310 = x231*x309;
  auto x311 = x229*x79;
  auto x312 = x175*x3;
  auto x313 = x194*x309;
  auto x314 = x3*x89*x90;
  auto x315 = x102*x194;
  auto x316 = x3 + 2*std::cos(x96);
  auto x317 = x316*x95;
  auto x318 = x29*x304;
  auto x319 = x164*x318;
  auto x320 = x55*x65;
  auto x321 = x127*x48;
  auto x322 = (3.0/2.0)*x321;
  auto x323 = (1.0/4.0)*x307;
  auto x324 = x323 + 1.0/4.0;
  auto x325 = x324/x59;
  auto x326 = x325*x57;
  auto x327 = x322*x326;
  auto x328 = (3.0/4.0)*x321;
  auto x329 = 1.0/x57;
  auto x330 = x329*x59;
  auto x331 = x3*x330;
  auto x332 = x328*x331;
  auto x333 = x108*x114;
  auto x334 = (3.0/4.0)*x307 + 3.0/4.0;
  auto x335 = x302*x334;
  auto x336 = x333*x335;
  auto x337 = x303*x326;
  auto x338 = x224*x337;
  auto x339 = x154*x337;
  auto x340 = x107*x114;
  auto x341 = x217*x49;
  auto x342 = x116*x3*x57;
  auto x343 = x341*x342;
  auto x344 = x331*x65;
  auto x345 = (9.0/8.0)*x344;
  auto x346 = x244*x345;
  auto x347 = x247*x345;
  auto x348 = x326*x65;
  auto x349 = x252*x4;
  auto x350 = x254*x4;
  auto x351 = x253*x348;
  auto x352 = x185*x254;
  auto x353 = x19*x344;
  auto x354 = x158*x348;
  auto x355 = x165*x354;
  auto x356 = x19*x29;
  auto x357 = x164*x356;
  auto x358 = x124*x357;
  auto x359 = x344*x358;
  auto x360 = x194*x314 + x218*x336 + x229*x310 + x240*x313 + x243*x313 - x250*x304 + x257*x344 - x291*x56 - x294 - x297 - x299 - x301 + x306 + x311*x312 + x315*x317 - x319 + x320*x327 + x320*x332 + x338 + x339 + x340*x343 + x346 + x347 + x348*x349 + x350*x351 + x352*x353 + x355 + x359;
  auto x361 = x281*x65;
  auto x362 = x272*x79;
  auto x363 = x273*x309;
  auto x364 = x102*x273;
  auto x365 = x331*x4;
  auto x366 = -f[0]*x56*x6 + (21.0/16.0)*x124*x361*x365 - x168*x360 + (81.0/16.0)*x186*x333*x342 + x240*x363 + x243*x363 - x268*x302*x361 - x269*x294 - x270*x297 - x271*x299 - x271*x301 + x272*x310 + x273*x314 + x274*x337*x55 + x276*x344*x49 + x277*x336 + x280*x306 + x280*x338 + x280*x339 + x280*x346 + x280*x347 + x284*x348*x350 + (21.0/8.0)*x285*x326*x361 + x286*x344*x350 - x289*x319 + x289*x355 + x289*x359 + x312*x362 + x317*x364;
  auto x367 = (1.0/2.0)*x53;
  auto x368 = p[15]*x367;
  auto x369 = (1.0/2.0)*x51;
  auto x370 = p[25]*x369;
  auto x371 = -x368 - x370;
  auto x372 = x322*x66;
  auto x373 = (3.0/2.0)*p[20]*x112;
  auto x374 = (3.0/2.0)*p[30]*x110;
  auto x375 = -x373 - x374;
  auto x376 = x108*x117;
  auto x377 = x375*x376;
  auto x378 = p[21]*x367;
  auto x379 = p[31]*x369;
  auto x380 = x378 + x379;
  auto x381 = x145*x150;
  auto x382 = x380*x381;
  auto x383 = p[17]*x367;
  auto x384 = p[27]*x369;
  auto x385 = -x383 - x384;
  auto x386 = x139*x145;
  auto x387 = x385*x386;
  auto x388 = p[12]*x75;
  auto x389 = p[22]*x73;
  auto x390 = -x388 - x389;
  auto x391 = x101*x230;
  auto x392 = x390*x391;
  auto x393 = p[14]*x75;
  auto x394 = p[24]*x73;
  auto x395 = x393 + x394;
  auto x396 = x85*x91;
  auto x397 = x395*x396;
  auto x398 = p[13]*x75;
  auto x399 = p[23]*x73;
  auto x400 = -x398 - x399;
  auto x401 = x400*x98;
  auto x402 = p[16]*x367;
  auto x403 = p[26]*x369;
  auto x404 = x120*(-x402 - x403);
  auto x405 = x126*x404;
  auto x406 = p[18]*x367;
  auto x407 = p[28]*x369;
  auto x408 = x120*(-x406 - x407);
  auto x409 = x133*x408;
  auto x410 = p[19]*x367;
  auto x411 = p[29]*x369;
  auto x412 = x160*(-x410 - x411);
  auto x413 = x124*x412;
  auto x414 = x132*x413;
  auto x415 = x159*x414;
  auto x416 = x194*x397 + x218*x377 + x229*x392 + x253*x405 + x253*x409 + x315*x401 + x371*x372 + x382 + x387 + x415;
  auto x417 = x144*x274;
  auto x418 = -x168*x416 + x272*x392 + x273*x397 + x277*x377 + x280*x382 + x280*x387 + x284*x405 + x284*x409 + x289*x415 + x364*x401 + x371*x417;
  auto x419 = x368 + x370;
  auto x420 = x373 + x374;
  auto x421 = x376*x420;
  auto x422 = x383 + x384;
  auto x423 = x386*x422;
  auto x424 = -x378 - x379;
  auto x425 = x381*x424;
  auto x426 = x388 + x389;
  auto x427 = x391*x426;
  auto x428 = -x393 - x394;
  auto x429 = x396*x428;
  auto x430 = x398 + x399;
  auto x431 = x430*x98;
  auto x432 = x120*(x402 + x403);
  auto x433 = x126*x432;
  auto x434 = x120*(x406 + x407);
  auto x435 = x133*x434;
  auto x436 = x160*(x410 + x411);
  auto x437 = x124*x436;
  auto x438 = x132*x159;
  auto x439 = x437*x438;
  auto x440 = x194*x429 + x218*x421 + x229*x427 + x253*x433 + x253*x435 + x315*x431 + x372*x419 + x423 + x425 + x439;
  auto x441 = -x168*x440 + x272*x427 + x273*x429 + x277*x421 + x280*x423 + x280*x425 + x284*x433 + x284*x435 + x289*x439 + x364*x431 + x417*x419;
  auto x442 = x103*x194;
  auto x443 = x194*x88;
  auto x444 = x131*x5;
  auto x445 = x107*x206;
  auto x446 = x204 + 1;
  auto x447 = (9.0/16.0)*x446;
  auto x448 = x230*x79*x81;
  auto x449 = x119*x217;
  auto x450 = x193*x447;
  auto x451 = (9.0/16.0)*x244;
  auto x452 = x17/x105;
  auto x453 = x183*x452;
  auto x454 = (9.0/16.0)*x247;
  auto x455 = x125*x447;
  auto x456 = x19*x209;
  auto x457 = x127*x356*x67;
  auto x458 = x77*x81;
  auto x459 = x195*x88;
  auto x460 = x193*x234*x37;
  auto x461 = x124*x66;
  auto x462 = x200*x29;
  auto x463 = (3.0/16.0)*x4;
  auto x464 = x251*x463;
  auto x465 = (3.0/16.0)*x446;
  auto x466 = x126*x250;
  auto x467 = x134*x185;
  auto x468 = x207*x220;
  auto x469 = x213*x445;
  auto x470 = x212*x469;
  auto x471 = x218*x48;
  auto x472 = x26*x468;
  auto x473 = x295*x469;
  auto x474 = x229*x231;
  auto x475 = x232*x58*(-x204 - 1)/std::pow(x63, 3);
  auto x476 = x194*x475;
  auto x477 = (3.0/16.0)*x165;
  auto x478 = x477*x48;
  auto x479 = x164*x461*x48;
  auto x480 = x253*x350;
  auto x481 = x288*x445;
  auto x482 = x158*x165;
  auto x483 = (3.0/4.0)*x165;
  auto x484 = x14*x269;
  auto x485 = f[0]*(f[0]*x1 + f[0]*x10 + f[0]*x7 + x103*x273 + x119*x277 + x126*x282 + x134*x284 + x147*x280 + x155*x280 + x166*x289 + x20*x484 + x23*x484 + x230*x362 + x270*x31 + x271*x41 + x271*x45 + x273*x92 + x275*x67 + (27.0/4.0)*x2/x193);
  auto x486 = x230*x311;
  auto x487 = (9.0/8.0)*x125;
  auto x488 = x19*x66;
  auto x489 = -x154*x487 - x224*x487 - x236*x341 - x251*x488 - x31 - x328*x67 - x352*x488 - x357*x461 + (1.0/6.0)*x485 - x486;
  auto x490 = x192*x69;
  auto x491 = x3*x30;
  auto x492 = x38*x56;
  auto x493 = x313*x492;
  auto x494 = x3*x90;
  auto x495 = x198*x90;
  auto x496 = x302*x64;
  auto x497 = x205*x62;
  auto x498 = x107*x497;
  auto x499 = x26*x498;
  auto x500 = x302*x499;
  auto x501 = x131*x64;
  auto x502 = x223*x305;
  auto x503 = x233*x308;
  auto x504 = x194*x503;
  auto x505 = x241*x242;
  auto x506 = x345*x4;
  auto x507 = x245*x4;
  auto x508 = x164*x29;
  auto x509 = x326*x64;
  auto x510 = x164*x213;
  auto x511 = x331*x64;
  auto x512 = x108*x497;
  auto x513 = x326*x512;
  auto x514 = x213*x509;
  auto x515 = x220*x471;
  auto x516 = x330*x491*x64;
  auto x517 = x326*x499;
  auto x518 = x331*x498;
  auto x519 = (9.0/8.0)*x518;
  auto x520 = x191*x514;
  auto x521 = x213*x511*x8;
  auto x522 = x107*x205*x279;
  auto x523 = (3.0/16.0)*x511;
  auto x524 = x114*x220*x343 + x114*x335*x515 + (27.0/16.0)*x116*x237*x340*x4*x491*x57 + x124*x264*x509*x510 + x154*x517 + x171*x180*x298 + x178*x180*x292*x4 - 9.0/8.0*x186*x365*x501 - x187*x326*x501 + x189*x337 + x189*x506 + x19*x254*x331*x522 - x191*x250*x287*x496 + x195*x443*x494 + x198*x309*x38*x99 + (27.0/4.0)*x199*x48*x496 - x200*x49*x511 + x210*x513 + x211*x212*x514 + x211*x331*x512 + x213*x456*x516 + x224*x517 + x226*x502 + x229*x234*x312*x78 + x230*x26*x28 - x238*x496*x510 + x239*x335*x340 + x240*x504 + x241*x3*x38*x89 + x243*x504 + x244*x519 + x244*x520 + x247*x519 + x247*x520 - x250*x500 + x251*x288*x523 + x254*x259*x287*x523 + x254*x261*x509 + x257*x514*x8 + x257*x518 - x26*x462*x509 + x287*x477*x516 + x309*x490*x78 + x311*x491 + x317*x495 + x317*x505 + x326*x349*x498 + (3.0/4.0)*x326*x350*x522 + x358*x518 + x451*x521 + x454*x521 + x459*x493 + x474*x503 + x483*x513 - x500*x508 + x502*x507;
  auto x525 = 1.0/x61;
  auto x526 = x416/std::tan(f[1]);
  auto x527 = x183*x187;
  auto x528 = x145*x188;
  auto x529 = x101*x490;
  auto x530 = x194*x395;
  auto x531 = x195*x91;
  auto x532 = x105*x202;
  auto x533 = x127*x371;
  auto x534 = (3.0/2.0)*x208;
  auto x535 = (3.0/4.0)*x215;
  auto x536 = x117*x375;
  auto x537 = x143*x226;
  auto x538 = x150*x380;
  auto x539 = x139*x385;
  auto x540 = x229*x390;
  auto x541 = x230*x4;
  auto x542 = x234*x541;
  auto x543 = x107*x239;
  auto x544 = x234*x492*x85;
  auto x545 = x143*x507;
  auto x546 = x253*x283;
  auto x547 = x132*x408;
  auto x548 = x249*x253;
  auto x549 = x214*x260;
  auto x550 = x124*x404;
  auto x551 = x262*x414 + x265*x414 + x380*x528 + x390*x529 + x401*x495 + x401*x505 + x404*x546 - x408*x527 - x413*x532 + x515*x536 + x530*x531 + x530*x544 + x533*x534 + x533*x535 + x536*x543 + x537*x538 + x537*x539 + x538*x545 + x539*x545 + x540*x542 + x547*x548 + x547*x549 + x549*x550;
  auto x552 = -x416*(-2.0/3.0*x525 + (1.0/6.0)*x61) - 2.0/3.0*x526 + x551;
  auto x553 = (1.0/3.0)*x526;
  auto x554 = (1.0/3.0)*x416;
  auto x555 = x525*x554;
  auto x556 = x194*x428;
  auto x557 = x127*x419;
  auto x558 = x117*x420;
  auto x559 = x139*x422;
  auto x560 = x150*x424;
  auto x561 = x229*x426;
  auto x562 = x132*x434;
  auto x563 = x124*x432;
  auto x564 = x132*x437;
  auto x565 = x262*x564 + x265*x564 - x3*x553 + x3*x555 + x424*x528 + x426*x529 + x431*x495 + x431*x505 + x432*x546 - x434*x527 - x437*x532 + x515*x558 + x531*x556 + x534*x557 + x535*x557 + x537*x559 + x537*x560 + x542*x561 + x543*x558 + x544*x556 + x545*x559 + x545*x560 + x548*x562 + x549*x562 + x549*x563;
  auto x566 = x551 - x553 + x555;
  auto x567 = x194*x92;
  auto x568 = x193*x309;
  auto x569 = x250*x5;
  auto x570 = x3*x66;
  auto x571 = x115*x325;
  auto x572 = x571*x65;
  auto x573 = x21*x59*x65/x115;
  auto x574 = x307 + 1;
  auto x575 = x502*x65;
  auto x576 = (9.0/16.0)*x574;
  auto x577 = x193*x576;
  auto x578 = x125*x576;
  auto x579 = x5*x508;
  auto x580 = x320*x322;
  auto x581 = x324*x57*(-x323 - 1.0/4.0)/x116;
  auto x582 = x325*x329;
  auto x583 = x3*x582;
  auto x584 = (3.0/16.0)*x574;
  auto x585 = x303*x581;
  auto x586 = x27*x582*x65;
  auto x587 = x581*x65;
  auto x588 = x583*x65;
  auto x589 = 1.0/std::tan(f[2]);
  auto x590 = x554*x589;
  auto x591 = 1.0/x56;
  auto x592 = (1.0/3.0)*x440*x591;
  auto x593 = x185*x304;
  auto x594 = x145*x305;
  auto x595 = x309*x541;
  auto x596 = x101*x312;
  auto x597 = x493*x85;
  auto x598 = x242*x313;
  auto x599 = x494*x85;
  auto x600 = x315*x316;
  auto x601 = x132*x318;
  auto x602 = x371*x65;
  auto x603 = x108*x218*x335;
  auto x604 = x143*x337;
  auto x605 = x107*x343;
  auto x606 = x143*x506;
  auto x607 = x285*x351;
  auto x608 = x351*x4;
  auto x609 = x185*x353;
  auto x610 = x344*x356;
  auto x611 = x327*x602 + x332*x602 + x354*x414 + x375*x603 + x375*x605 + x385*x594 + x395*x597 + x400*x600 + x401*x598 - x404*x593 + x404*x607 - x412*x601 + x414*x610 + x530*x599 + x538*x604 + x538*x606 + x539*x604 + x539*x606 + x540*x595 + x540*x596 + x547*x608 + x547*x609 + x550*x609;
  auto x612 = -x590*x8 + x592*x8 + x611;
  auto x613 = x419*x65;
  auto x614 = x327*x613 + x332*x613 + x354*x564 - x416*((1.0/6.0)*x56 - 2.0/3.0*x591) + x420*x603 + x420*x605 + x422*x594 + x428*x597 + x430*x600 + x431*x598 - x432*x593 + x432*x607 - x436*x601 - 2.0/3.0*x440*x589 + x556*x599 + x559*x604 + x559*x606 + x560*x604 + x560*x606 + x561*x595 + x561*x596 + x562*x608 + x562*x609 + x563*x609 + x564*x610;
  auto x615 = -x590 + x592 + x611;
  auto x616 = (1.0/18.0)*x485;
  auto x617 = (1.0/4.0)*x52;
  auto x618 = (1.0/4.0)*x54;
  auto x619 = (9.0/4.0)*x111;
  auto x620 = (9.0/4.0)*x113;
  auto x621 = x218*x376;
  auto x622 = (1.0/4.0)*x140;
  auto x623 = (1.0/4.0)*x141;
  auto x624 = (1.0/4.0)*x151;
  auto x625 = (1.0/4.0)*x152;
  auto x626 = (1.0/4.0)*x121;
  auto x627 = (1.0/4.0)*x122;
  auto x628 = x120*x253;
  auto x629 = x126*x628;
  auto x630 = (1.0/4.0)*x129;
  auto x631 = (1.0/4.0)*x130;
  auto x632 = x133*x628;
  auto x633 = (1.0/4.0)*x161;
  auto x634 = (1.0/4.0)*x162;
  auto x635 = x124*x160*x438;
  auto x636 = x194*x396*(-x86 + x87) + x229*x391*(-x74 + x76) + x315*x98*(-x93 + x94) + x372*(-x617 + x618) + x381*(-x624 + x625) + x386*(-x622 + x623) + x621*(-x619 + x620) + x629*(-x626 + x627) + x632*(-x630 + x631) + x635*(-x633 + x634);
  auto x637 = (1.0/3.0)*x360*x56;
  auto x638 = (1.0/3.0)*x267*x61;
  auto x639 = (1.0/9.0)*x485;
  auto x640 = x639*x8;
  auto x641 = x372*(x617 - x618) + x381*(x624 - x625) + x386*(x622 - x623) + x442 + x486 + x567 + x621*(x619 - x620) + x629*(x626 - x627) + x632*(x630 - x631) + x635*(x633 - x634);
  auto x642 = -x3*x638 + x3*x640 - x637*x8 + x641;
  auto x643 = x636 - x638 + x640;
  auto x644 = x3*x639 - x637 + x641;

 sum[0]=x1 + x10 + x103*x82 + (189.0/16.0)*x106*x119 + x123*x126*x128 + x128*x134 - x136*x147 - x136*x155 + x147*x156 + x155*x156 + std::pow(x157, 2)*x167 - x157*x167 - x16*x20 - x16*x23 + x20*x24 + x23*x24 + std::pow(x25, 2)*x32 - x25*x32 - x41*x42 + x41*x46 - x42*x45 + x45*x46 + (27.0/4.0)*x68*x80 + x7 + x82*x92 + x49*x67/x47 - 135.0/4.0*x2/std::pow(f[0], 6);

 sum[6]=x290;

 sum[12]=x366;

 sum[18]=x418;

 sum[24]=x441;

 sum[30]=x418;

 sum[1]=x290;

 sum[7]=-x103*x450 + x118*x219*x471*(-5.0/4.0*x204 - 5.0/4.0)/std::pow(x63, 7.0/2.0) + (9.0/16.0)*x119*x17*x213*x216 + x144*x153*(-x148 - 10*x149 + 10*x17) + x149*x173 + x149*x181 - x154*x455 + x154*x472 + x154*x473 - x163*x30*x461*x5 - x17*x173 - x17*x181 - x170*x8 - x185*x258*x452*x463 - x186*x444*x445 + x189*x214*x295 + x189*x225*x5 - x201*x452*x456 + x210*x470 + x221*x237*x29*x295 - x224*x455 + x224*x472 + x224*x473 + x234*x296*x458 + x240*x476 + x243*x476 + x252*x481 + x253*x254*x481 - x259*x444*x66 + x26*x459*x460*x56 + x295*x460*x99 + x322*x468*x55 + x349*x468 - x442 + x443*x91*(-x61 + 4*x84) - x445*x462*x5 - x446*x457 - x447*x448 - x447*x449 - x45 - x450*x92 - x451*x453 - x453*x454 - x453*x464 - x453*x478 - x465*x466 - x465*x467 - x465*x479 + x468*x480 + x468*x482 + x470*x483 + x474*x475 + x489;

 sum[13]=x524;

 sum[19]=x552;

 sum[25]=x565;

 sum[31]=x566;

 sum[2]=x366;

 sum[8]=x524;

 sum[14]=x100*x26*x317*x568 + x103*x577 + (9.0/16.0)*x116*x21*x217*x329*x333 + x137*x293 + x137*x300 + x146*(10*x137 - x138 - 10*x21) + x154*x578 + x154*x585 + x154*x586 + x176*x309*x458 - x21*x293 - x21*x300 + x217*x27*x29*x334*x340*x60 + x218*x333*x334*x571 + x224*x578 + x224*x585 + x224*x586 + x27*x330*x575 + x27*x37*x568*x89 - x29*x456*x573 - x291*x3 + x315*x95*(-x56 - 4*x97) + x326*x5*x575 + x349*x587 + x349*x588 - x352*x463*x573 - x41 + x448*x576 + x449*x576 - x451*x573 - x454*x573 + x457*x574 - x464*x573 + x466*x584 + x467*x584 - x478*x573 + x479*x584 + x480*x587 + x480*x588 + x482*x587 + x482*x588 + x489 - x567 - x569*x570 - x569*x572 - x570*x579 - x572*x579 + x577*x92 + x580*x581 + x580*x583;

 sum[20]=x612;

 sum[26]=x614;

 sum[32]=x615;

 sum[3]=x418;

 sum[9]=x552;

 sum[15]=x612;

 sum[21]=(1.0/6.0)*x267*x84 + x616*(x149 + 2) + x636;

 sum[27]=x642;

 sum[33]=x643;

 sum[4]=x441;

 sum[10]=x565;

 sum[16]=x614;

 sum[22]=x642;

 sum[28]=(1.0/6.0)*x360*x97 + x616*(x137 + 2) + x636;

 sum[34]=x644;

 sum[5]=x418;

 sum[11]=x566;

 sum[17]=x615;

 sum[23]=x643;

 sum[29]=x644;

 sum[35]=x636 + x639;
     
        return sum;
	}
    
	// calculates V'''
	vector<double> dVVV(vector<double> f, vector<double> p)
	{
        vector<double> sum(nF*nF*nF,0.0);
// dddPot
  auto x0 = std::pow(p[0], 2)*std::pow(p[1], 8)/(std::pow(M_PI, 2)*std::pow(p[3], 4));
  auto x1 = -2 + 2*std::sqrt(10);
  auto x2 = std::sqrt(15)*std::pow(f[0], x1);
  auto x3 = p[10]*x2;
  auto x4 = std::cos(f[1]);
  auto x5 = std::pow(x4, 2);
  auto x6 = 3*x5 - 1;
  auto x7 = std::pow(p[3], 2)*(2*p[0]*std::pow(p[1], 4) + p[4]);
  auto x8 = p[2]/std::pow(M_PI, 3.0/2.0);
  auto x9 = x7*x8;
  auto x10 = (9.0/8.0)*x9;
  auto x11 = x10*x6;
  auto x12 = std::pow(f[0], 3);
  auto x13 = 1.0/x12;
  auto x14 = std::pow(x1, 2);
  auto x15 = x13*x14;
  auto x16 = p[6]*x2;
  auto x17 = std::cos(f[2]);
  auto x18 = std::pow(x17, 2);
  auto x19 = 3*x18 - 1;
  auto x20 = x10*x19;
  auto x21 = x13*x3;
  auto x22 = (3.0/4.0)*x9;
  auto x23 = x1*x22;
  auto x24 = x16*x19;
  auto x25 = x13*x24;
  auto x26 = std::pow(x1, 3);
  auto x27 = (3.0/8.0)*x9;
  auto x28 = x27*x6;
  auto x29 = std::sqrt(3);
  auto x30 = (27.0/4.0)*x9;
  auto x31 = x29*x30;
  auto x32 = std::sin(f[1]);
  auto x33 = std::sin(f[2]);
  auto x34 = x32*x33;
  auto x35 = f[3] - f[4] + f[5];
  auto x36 = std::cos(x35);
  auto x37 = p[12]*x36;
  auto x38 = std::sin(x35);
  auto x39 = p[22]*x38;
  auto x40 = x37 - x39;
  auto x41 = std::tan((1.0/2.0)*f[1]);
  auto x42 = 1.0/x41;
  auto x43 = std::tan((1.0/2.0)*f[2]);
  auto x44 = x42*x43;
  auto x45 = x40*x44;
  auto x46 = x34*x45;
  auto x47 = -2 + 2*std::sqrt(7);
  auto x48 = std::pow(x47, 2);
  auto x49 = std::pow(f[0], x47)*p[8];
  auto x50 = x29*x49;
  auto x51 = x17*x4;
  auto x52 = x50*x51;
  auto x53 = x13*x52;
  auto x54 = std::sqrt(5);
  auto x55 = -2 + 2*std::sqrt(13);
  auto x56 = std::pow(f[0], x55)*x54;
  auto x57 = p[11]*x56;
  auto x58 = x17*x57;
  auto x59 = x13*x6;
  auto x60 = std::pow(x55, 2);
  auto x61 = (27.0/8.0)*x9;
  auto x62 = x60*x61;
  auto x63 = p[9]*x56;
  auto x64 = x4*x63;
  auto x65 = x19*x64;
  auto x66 = x13*x65;
  auto x67 = std::pow(f[0], 3.0/2.0);
  auto x68 = x29*x9;
  auto x69 = (9.0/16.0)*x68;
  auto x70 = (1.0/2.0)*f[3] - 1.0/2.0*f[4] + (1.0/2.0)*f[5];
  auto x71 = std::cos(x70);
  auto x72 = p[15]*x71;
  auto x73 = std::sin(x70);
  auto x74 = p[25]*x73;
  auto x75 = x72 - x74;
  auto x76 = std::sqrt(x41);
  auto x77 = 1.0/x76;
  auto x78 = std::sqrt(x43);
  auto x79 = x77*x78;
  auto x80 = std::sqrt(x32);
  auto x81 = std::sqrt(x33);
  auto x82 = x80*x81;
  auto x83 = x79*x82;
  auto x84 = x75*x83;
  auto x85 = x69*x84;
  auto x86 = (9.0/2.0)*x9;
  auto x87 = (9.0/4.0)*x9;
  auto x88 = x58*x87;
  auto x89 = x50*x87;
  auto x90 = x51*x89;
  auto x91 = x11*x58;
  auto x92 = x13*std::pow(x55, 3);
  auto x93 = x20*x64;
  auto x94 = std::pow(f[0], 2);
  auto x95 = x9*x94;
  auto x96 = (135.0/2.0)*x95;
  auto x97 = p[24]*x38;
  auto x98 = p[14]*x36;
  auto x99 = x97 - x98;
  auto x100 = x33*x99;
  auto x101 = 2*f[1];
  auto x102 = std::sin(x101);
  auto x103 = -x102 + x32;
  auto x104 = x44*x54;
  auto x105 = x103*x104;
  auto x106 = x100*x105;
  auto x107 = p[13]*x36;
  auto x108 = p[23]*x38;
  auto x109 = x107 - x108;
  auto x110 = 2*f[2];
  auto x111 = std::sin(x110);
  auto x112 = x111 + x33;
  auto x113 = x109*x112;
  auto x114 = x104*x32;
  auto x115 = x113*x114;
  auto x116 = std::pow(x32, 3.0/2.0);
  auto x117 = x116*x67;
  auto x118 = std::pow(x33, 3.0/2.0);
  auto x119 = std::pow(x41, -3.0/2.0);
  auto x120 = x118*x119;
  auto x121 = std::pow(x43, 3.0/2.0);
  auto x122 = (3.0/2.0)*f[3] - 3.0/2.0*f[4] + (3.0/2.0)*f[5];
  auto x123 = std::cos(x122);
  auto x124 = p[20]*x123;
  auto x125 = std::sin(x122);
  auto x126 = p[30]*x125;
  auto x127 = x124 - x126;
  auto x128 = x121*x127;
  auto x129 = x120*x128;
  auto x130 = x129*x68;
  auto x131 = p[16]*x71;
  auto x132 = p[26]*x73;
  auto x133 = x131 - x132;
  auto x134 = std::sqrt(6);
  auto x135 = 3*x17 + 1;
  auto x136 = x134*x135;
  auto x137 = x133*x136;
  auto x138 = std::sqrt(f[0]);
  auto x139 = x83*x9;
  auto x140 = (315.0/32.0)*x138*x139;
  auto x141 = p[18]*x71;
  auto x142 = p[28]*x73;
  auto x143 = x141 - x142;
  auto x144 = 3*x4 - 1;
  auto x145 = x134*x144;
  auto x146 = x143*x145;
  auto x147 = std::pow(x33, 2);
  auto x148 = 2*x17;
  auto x149 = -5*x147 + x148 + 4;
  auto x150 = -2 + (1.0/2.0)*std::sqrt(241);
  auto x151 = std::pow(f[0], x150);
  auto x152 = p[17]*x71;
  auto x153 = p[27]*x73;
  auto x154 = x152 - x153;
  auto x155 = x151*x154;
  auto x156 = x149*x155;
  auto x157 = x156*x83;
  auto x158 = x13*x157;
  auto x159 = std::pow(x150, 2);
  auto x160 = x159*x30;
  auto x161 = 2*x4;
  auto x162 = std::pow(x32, 2);
  auto x163 = x161 + 5*x162 - 4;
  auto x164 = p[31]*x73;
  auto x165 = p[21]*x71;
  auto x166 = x151*(x164 - x165);
  auto x167 = x166*x83;
  auto x168 = x163*x167;
  auto x169 = x13*x168;
  auto x170 = x150*x86;
  auto x171 = x13*std::pow(x150, 3);
  auto x172 = x83*x87;
  auto x173 = x151*x172;
  auto x174 = x154*x173;
  auto x175 = x149*x174;
  auto x176 = x166*x172;
  auto x177 = x163*x176;
  auto x178 = -2 + (1.0/2.0)*std::sqrt(193);
  auto x179 = std::pow(x178, 2);
  auto x180 = std::pow(f[0], x178);
  auto x181 = p[19]*x71;
  auto x182 = p[29]*x73;
  auto x183 = x181 - x182;
  auto x184 = x180*x183;
  auto x185 = x144*x184;
  auto x186 = x135*x185;
  auto x187 = (3.0/2.0)*x68;
  auto x188 = x135*x83;
  auto x189 = x184*x188;
  auto x190 = x144*x189;
  auto x191 = x22*x29;
  auto x192 = x188*x191;
  auto x193 = x144*x192;
  auto x194 = x184*x193;
  auto x195 = 1.0/f[0];
  auto x196 = p[7]*x32;
  auto x197 = (9.0/4.0)*x95;
  auto x198 = x196*x197;
  auto x199 = x32*x4;
  auto x200 = x199*x3;
  auto x201 = x200*x87;
  auto x202 = x17*x32;
  auto x203 = x202*x29;
  auto x204 = x203*x87;
  auto x205 = x204*x49;
  auto x206 = x32*x63;
  auto x207 = x20*x206;
  auto x208 = x199*x30;
  auto x209 = x208*x58;
  auto x210 = x81*x87;
  auto x211 = std::pow(f[0], 7.0/2.0);
  auto x212 = x116*x211;
  auto x213 = x134*x79;
  auto x214 = x143*x213;
  auto x215 = x212*x214;
  auto x216 = 2*x32;
  auto x217 = 10*x199 - x216;
  auto x218 = x166*x217;
  auto x219 = x172*x218;
  auto x220 = x180*x79;
  auto x221 = x183*x220;
  auto x222 = x116*x221;
  auto x223 = x222*x29;
  auto x224 = x135*x210;
  auto x225 = x223*x224;
  auto x226 = x67*x68;
  auto x227 = (3.0/2.0)*x226;
  auto x228 = x75*x82;
  auto x229 = x227*x228;
  auto x230 = std::pow(x41, 2);
  auto x231 = -1.0/4.0*x230 - 1.0/4.0;
  auto x232 = x231*x78;
  auto x233 = x119*x232;
  auto x234 = x229*x233;
  auto x235 = x75*x79;
  auto x236 = x235*x81;
  auto x237 = x191*x67;
  auto x238 = 1.0/x80;
  auto x239 = x238*x4;
  auto x240 = x237*x239;
  auto x241 = std::pow(f[0], 9.0/2.0);
  auto x242 = x116*x241;
  auto x243 = x191*x242;
  auto x244 = x118*x128;
  auto x245 = std::pow(x41, -5.0/2.0);
  auto x246 = -3.0/4.0*x230 - 3.0/4.0;
  auto x247 = x245*x246;
  auto x248 = x244*x247;
  auto x249 = x82*x87;
  auto x250 = x156*x233;
  auto x251 = x249*x250;
  auto x252 = x163*x166;
  auto x253 = x233*x249;
  auto x254 = x252*x253;
  auto x255 = x129*x241;
  auto x256 = x10*x29;
  auto x257 = x256*x80;
  auto x258 = x257*x4;
  auto x259 = x239*x81;
  auto x260 = x10*x79;
  auto x261 = x156*x260;
  auto x262 = x259*x261;
  auto x263 = x252*x260;
  auto x264 = x259*x263;
  auto x265 = x233*x82;
  auto x266 = x22*x265;
  auto x267 = x211*x266;
  auto x268 = x137*x267;
  auto x269 = x146*x267;
  auto x270 = x133*x213;
  auto x271 = x211*x270;
  auto x272 = x259*x27;
  auto x273 = x135*x272;
  auto x274 = x144*x214;
  auto x275 = x211*x272;
  auto x276 = x135*x191;
  auto x277 = x185*x276;
  auto x278 = x265*x277;
  auto x279 = x27*x29;
  auto x280 = x144*x221;
  auto x281 = x279*x280;
  auto x282 = x135*x281;
  auto x283 = x259*x282;
  auto x284 = x33*x4;
  auto x285 = x12*x45;
  auto x286 = x284*x285;
  auto x287 = x256*x286;
  auto x288 = std::pow(f[0], 5);
  auto x289 = x10*x288;
  auto x290 = std::cos(x101);
  auto x291 = 2*x290;
  auto x292 = -x291 + x4;
  auto x293 = x100*x104;
  auto x294 = x292*x293;
  auto x295 = x289*x294;
  auto x296 = x113*x289;
  auto x297 = x104*x4;
  auto x298 = x296*x297;
  auto x299 = 1.0/x230;
  auto x300 = -1.0/2.0*x230 - 1.0/2.0;
  auto x301 = x299*x300;
  auto x302 = x301*x43;
  auto x303 = x12*x256;
  auto x304 = x34*x40;
  auto x305 = x303*x304;
  auto x306 = x302*x305;
  auto x307 = x103*x289;
  auto x308 = x100*x54;
  auto x309 = x302*x308;
  auto x310 = x307*x309;
  auto x311 = x32*x54;
  auto x312 = x296*x311;
  auto x313 = x287 + x295 + x298 + x302*x312 + x306 + x310;
  auto x314 = -x198 - x201 - x205 - x207 - x209 - x210*x215 + x219 - x225 + x234 + x236*x240 + x243*x248 + x251 + x254 + x255*x258 + x262 + x264 + x268 + x269 + x271*x273 + x274*x275 + x278 + x283 + x313;
  auto x315 = f[0]*x7;
  auto x316 = x315*x8;
  auto x317 = (9.0/2.0)*x316;
  auto x318 = x81*x9;
  auto x319 = x214*x318;
  auto x320 = std::pow(f[0], 5.0/2.0);
  auto x321 = x116*x320;
  auto x322 = (63.0/8.0)*x321;
  auto x323 = x1*x195;
  auto x324 = x205*x47;
  auto x325 = x207*x55;
  auto x326 = (27.0/8.0)*x95;
  auto x327 = x284*x29;
  auto x328 = x327*x45;
  auto x329 = x294*x9;
  auto x330 = std::pow(f[0], 4);
  auto x331 = (45.0/8.0)*x330;
  auto x332 = x331*x9;
  auto x333 = x113*x297;
  auto x334 = x195*x55;
  auto x335 = x138*x29;
  auto x336 = x335*x87;
  auto x337 = x228*x233;
  auto x338 = x236*x239;
  auto x339 = x138*x256;
  auto x340 = x302*x326;
  auto x341 = x29*x304;
  auto x342 = x212*x29;
  auto x343 = x342*x61;
  auto x344 = x103*x308;
  auto x345 = x302*x332;
  auto x346 = x113*x311;
  auto x347 = (81.0/16.0)*x130;
  auto x348 = x211*x80;
  auto x349 = x348*x4;
  auto x350 = x150*x219;
  auto x351 = x265*x9;
  auto x352 = (21.0/8.0)*x320;
  auto x353 = x137*x352;
  auto x354 = x146*x351;
  auto x355 = x239*x320;
  auto x356 = (21.0/16.0)*x355;
  auto x357 = x135*x270;
  auto x358 = x318*x357;
  auto x359 = x144*x319;
  auto x360 = x178*x195;
  auto x361 = x150*x195;
  auto x362 = -x195*x324 - x195*x325 + x195*x350 - x196*x317 - x201*x323 - x209*x334 - x225*x360 + x248*x343 + x251*x361 + x254*x361 + x262*x361 + x264*x361 + x278*x360 + x283*x360 - x319*x322 + x326*x328 + x329*x331 + x332*x333 + x336*x337 + x338*x339 + x340*x341 + x344*x345 + x345*x346 + x347*x349 + x351*x353 + x352*x354 + x356*x358 + x356*x359;
  auto x363 = -x195*x314 + x362;
  auto x364 = x195*x363;
  auto x365 = p[7]*x86;
  auto x366 = 1.0/x94;
  auto x367 = x14*x366;
  auto x368 = x366*x48;
  auto x369 = x366*x60;
  auto x370 = x1*x366;
  auto x371 = (27.0/4.0)*x316;
  auto x372 = (45.0/2.0)*x12;
  auto x373 = x372*x9;
  auto x374 = 1.0/x138;
  auto x375 = x256*x374;
  auto x376 = x374*x69;
  auto x377 = x302*x341;
  auto x378 = x366*x55;
  auto x379 = x302*x373;
  auto x380 = (189.0/16.0)*x321;
  auto x381 = x380*x68;
  auto x382 = x320*x80;
  auto x383 = x130*x4;
  auto x384 = x159*x366;
  auto x385 = (105.0/16.0)*x67;
  auto x386 = x137*x385;
  auto x387 = x239*x67;
  auto x388 = (105.0/32.0)*x387;
  auto x389 = x225*x366;
  auto x390 = x150*x366;
  auto x391 = x178*x366;
  auto x392 = x179*x366;
  auto x393 = -315.0/16.0*x117*x319 + x178*x389 - x179*x389 - x201*x367 + x201*x370 - x205*x368 - x207*x369 - x209*x369 + x209*x378 + x219*x384 + x248*x381 + x251*x384 - x251*x390 + x254*x384 - x254*x390 + x262*x384 - x262*x390 + x264*x384 - x264*x390 - x278*x391 + x278*x392 - x283*x391 + x283*x392 - x32*x365 + x324*x366 + x325*x366 + x328*x371 + x329*x372 + x333*x373 + x337*x375 + x338*x376 + x344*x379 + x346*x379 - x350*x366 + x351*x386 + x354*x385 + x358*x388 + x359*x388 + x371*x377 + (567.0/32.0)*x382*x383;
  auto x394 = p[5]*x33;
  auto x395 = x197*x394;
  auto x396 = x17*x33;
  auto x397 = x16*x396;
  auto x398 = x397*x87;
  auto x399 = x284*x89;
  auto x400 = x33*x57;
  auto x401 = x11*x400;
  auto x402 = x30*x64;
  auto x403 = x396*x402;
  auto x404 = x118*x87;
  auto x405 = x270*x348;
  auto x406 = 2*x33;
  auto x407 = -10*x396 - x406;
  auto x408 = x174*x407;
  auto x409 = x29*x80;
  auto x410 = x404*x409;
  auto x411 = x280*x410;
  auto x412 = 1.0/x78;
  auto x413 = std::pow(x43, 2);
  auto x414 = (1.0/4.0)*x413;
  auto x415 = x414 + 1.0/4.0;
  auto x416 = x412*x415;
  auto x417 = x416*x77;
  auto x418 = x67*x80;
  auto x419 = x235*x418;
  auto x420 = 1.0/x81;
  auto x421 = x17*x420;
  auto x422 = x191*x421;
  auto x423 = x120*x127;
  auto x424 = (3.0/4.0)*x413;
  auto x425 = x424 + 3.0/4.0;
  auto x426 = x425*x78;
  auto x427 = x243*x426;
  auto x428 = x423*x427;
  auto x429 = x249*x417;
  auto x430 = x156*x429;
  auto x431 = x252*x429;
  auto x432 = x119*x128;
  auto x433 = x242*x256;
  auto x434 = x17*x81;
  auto x435 = x433*x434;
  auto x436 = x421*x80;
  auto x437 = x261*x436;
  auto x438 = x263*x436;
  auto x439 = x417*x82;
  auto x440 = x22*x439;
  auto x441 = x211*x440;
  auto x442 = x27*x421;
  auto x443 = x135*x405;
  auto x444 = x214*x421;
  auto x445 = x144*x348;
  auto x446 = x444*x445;
  auto x447 = x277*x439;
  auto x448 = x282*x436;
  auto x449 = (1.0/2.0)*x413 + 1.0/2.0;
  auto x450 = x42*x449;
  auto x451 = x304*x450;
  auto x452 = x303*x451;
  auto x453 = x10*x203;
  auto x454 = x285*x453;
  auto x455 = x450*x54;
  auto x456 = x100*x455;
  auto x457 = x32*x455;
  auto x458 = x296*x457;
  auto x459 = x105*x289;
  auto x460 = x17*x99;
  auto x461 = x459*x460;
  auto x462 = x114*x289;
  auto x463 = std::cos(x110);
  auto x464 = 2*x463;
  auto x465 = x17 + x464;
  auto x466 = x109*x465;
  auto x467 = x462*x466;
  auto x468 = x307*x456 + x452 + x454 + x458 + x461 + x467;
  auto x469 = x137*x441 + x146*x441 + x229*x417 + x27*x446 - x395 - x398 - x399 - x401 - x403 - x404*x405 + x408 - x411 + x419*x422 + x428 + x430 + x431 + x432*x435 + x437 + x438 + x442*x443 + x447 + x448 + x468;
  auto x470 = x118*x9;
  auto x471 = x270*x470;
  auto x472 = (63.0/8.0)*x382;
  auto x473 = x399*x47;
  auto x474 = x401*x55;
  auto x475 = x29*x451;
  auto x476 = x203*x45;
  auto x477 = x103*x456;
  auto x478 = x113*x457;
  auto x479 = x105*x460;
  auto x480 = x114*x466;
  auto x481 = x228*x417;
  auto x482 = x138*x235;
  auto x483 = x257*x421;
  auto x484 = x423*x426;
  auto x485 = x432*x434;
  auto x486 = (81.0/16.0)*x68;
  auto x487 = x212*x486;
  auto x488 = x150*x408;
  auto x489 = x439*x9;
  auto x490 = x146*x489;
  auto x491 = (21.0/16.0)*x382;
  auto x492 = x421*x9;
  auto x493 = x357*x492;
  auto x494 = x444*x9;
  auto x495 = x144*x494;
  auto x496 = -x195*x473 - x195*x474 + x195*x488 - x317*x394 - x323*x398 + x326*x475 + x326*x476 + x332*x477 + x332*x478 + x332*x479 + x332*x480 - x334*x403 + x336*x481 + x343*x484 + x352*x490 + x353*x489 - x360*x411 + x360*x447 + x360*x448 + x361*x430 + x361*x431 + x361*x437 + x361*x438 - x471*x472 + x482*x483 + x485*x487 + x491*x493 + x491*x495;
  auto x497 = -x195*x469 + x496;
  auto x498 = x195*x497;
  auto x499 = p[5]*x86;
  auto x500 = x485*x68;
  auto x501 = (105.0/32.0)*x418;
  auto x502 = x366*x411;
  auto x503 = x178*x502 - x179*x502 + x235*x376*x436 + (567.0/32.0)*x321*x500 - x33*x499 + x366*x473 + x366*x474 - x366*x488 - x367*x398 - x368*x399 - x369*x401 - x369*x403 + x370*x398 + x371*x475 + x371*x476 + x373*x477 + x373*x478 + x373*x479 + x373*x480 + x375*x481 + x378*x403 + x381*x484 + x384*x408 + x384*x430 + x384*x431 + x384*x437 + x384*x438 + x385*x490 + x386*x489 - x390*x430 - x390*x431 - x390*x437 - x390*x438 - x391*x447 - x391*x448 + x392*x447 + x392*x448 - 315.0/16.0*x418*x471 + x493*x501 + x495*x501;
  auto x504 = (1.0/2.0)*x73;
  auto x505 = p[15]*x504;
  auto x506 = (1.0/2.0)*x71;
  auto x507 = p[25]*x506;
  auto x508 = -x505 - x507;
  auto x509 = x508*x83;
  auto x510 = p[20]*x125;
  auto x511 = (3.0/2.0)*x510;
  auto x512 = p[30]*x123;
  auto x513 = (3.0/2.0)*x512;
  auto x514 = -x511 - x513;
  auto x515 = x120*x121;
  auto x516 = x514*x515;
  auto x517 = p[21]*x504;
  auto x518 = p[31]*x506;
  auto x519 = x517 + x518;
  auto x520 = x163*x173;
  auto x521 = x519*x520;
  auto x522 = p[17]*x504;
  auto x523 = p[27]*x506;
  auto x524 = -x522 - x523;
  auto x525 = x149*x173;
  auto x526 = x524*x525;
  auto x527 = x22*x83;
  auto x528 = x211*x527;
  auto x529 = p[16]*x504;
  auto x530 = p[26]*x506;
  auto x531 = -x529 - x530;
  auto x532 = x136*x531;
  auto x533 = p[18]*x504;
  auto x534 = p[28]*x506;
  auto x535 = -x533 - x534;
  auto x536 = x145*x535;
  auto x537 = p[19]*x504;
  auto x538 = p[29]*x506;
  auto x539 = -x537 - x538;
  auto x540 = x144*x539;
  auto x541 = x180*x540;
  auto x542 = x192*x541;
  auto x543 = x34*x44;
  auto x544 = p[12]*x38;
  auto x545 = p[22]*x36;
  auto x546 = -x544 - x545;
  auto x547 = x303*x546;
  auto x548 = x543*x547;
  auto x549 = p[14]*x38;
  auto x550 = p[24]*x36;
  auto x551 = x549 + x550;
  auto x552 = x33*x551;
  auto x553 = x459*x552;
  auto x554 = p[13]*x38;
  auto x555 = p[23]*x36;
  auto x556 = -x554 - x555;
  auto x557 = x112*x556;
  auto x558 = x462*x557;
  auto x559 = x548 + x553 + x558;
  auto x560 = x227*x509 + x243*x516 + x521 + x526 + x528*x532 + x528*x536 + x542 + x559;
  auto x561 = x172*x335;
  auto x562 = x29*x543;
  auto x563 = x326*x546;
  auto x564 = x105*x552;
  auto x565 = x114*x557;
  auto x566 = x139*x532;
  auto x567 = x139*x536;
  auto x568 = x332*x564 + x332*x565 + x343*x516 + x352*x566 + x352*x567 + x360*x542 + x361*x521 + x361*x526 + x508*x561 + x562*x563;
  auto x569 = -x195*x560 + x568;
  auto x570 = x195*x569;
  auto x571 = x371*x562;
  auto x572 = x516*x68;
  auto x573 = x366*x542;
  auto x574 = -x178*x573 + x179*x573 + x373*x564 + x373*x565 + x375*x509 + x380*x572 + x384*x521 + x384*x526 + x385*x566 + x385*x567 - x390*x521 - x390*x526 + x546*x571;
  auto x575 = -2*x570 + x574;
  auto x576 = x505 + x507;
  auto x577 = x576*x83;
  auto x578 = x511 + x513;
  auto x579 = x515*x578;
  auto x580 = x522 + x523;
  auto x581 = x525*x580;
  auto x582 = -x517 - x518;
  auto x583 = x520*x582;
  auto x584 = x529 + x530;
  auto x585 = x136*x584;
  auto x586 = x533 + x534;
  auto x587 = x145*x586;
  auto x588 = x537 + x538;
  auto x589 = x180*x588;
  auto x590 = x193*x589;
  auto x591 = x544 + x545;
  auto x592 = x303*x591;
  auto x593 = x543*x592;
  auto x594 = -x549 - x550;
  auto x595 = x33*x594;
  auto x596 = x459*x595;
  auto x597 = x554 + x555;
  auto x598 = x112*x597;
  auto x599 = x462*x598;
  auto x600 = x593 + x596 + x599;
  auto x601 = x227*x577 + x243*x579 + x528*x585 + x528*x587 + x581 + x583 + x590 + x600;
  auto x602 = x326*x591;
  auto x603 = x105*x595;
  auto x604 = x114*x598;
  auto x605 = x139*x352;
  auto x606 = x332*x603 + x332*x604 + x343*x579 + x360*x590 + x361*x581 + x361*x583 + x561*x576 + x562*x602 + x585*x605 + x587*x605;
  auto x607 = -x195*x601 + x606;
  auto x608 = x195*x607;
  auto x609 = x139*x385;
  auto x610 = x366*x590;
  auto x611 = -x178*x610 + x179*x610 + x373*x603 + x373*x604 + x375*x577 + x381*x579 + x384*x581 + x384*x583 - x390*x581 - x390*x583 + x571*x591 + x585*x609 + x587*x609;
  auto x612 = -x195*x362 + x314*x366 - x364 + x393;
  auto x613 = p[7]*x4;
  auto x614 = x5*x87;
  auto x615 = x3*x614;
  auto x616 = x162*x3;
  auto x617 = x616*x87;
  auto x618 = x30*x5;
  auto x619 = x58*x618;
  auto x620 = x162*x30;
  auto x621 = x58*x620;
  auto x622 = x115*x289;
  auto x623 = -x161 - 10*x162 + 10*x5;
  auto x624 = x176*x623;
  auto x625 = 4*x102 - x32;
  auto x626 = x293*x625;
  auto x627 = x134*x143;
  auto x628 = x211*x83;
  auto x629 = x4*x86;
  auto x630 = x628*x629;
  auto x631 = x233*x86;
  auto x632 = x212*x627;
  auto x633 = x632*x81;
  auto x634 = x230 + 1;
  auto x635 = x12*x69;
  auto x636 = x46*x635;
  auto x637 = x129*x242;
  auto x638 = x637*x69;
  auto x639 = (9.0/16.0)*x9;
  auto x640 = x288*x639;
  auto x641 = x634*x640;
  auto x642 = 1.0/x116;
  auto x643 = x5*x642;
  auto x644 = x156*x79;
  auto x645 = (9.0/16.0)*x318;
  auto x646 = x644*x645;
  auto x647 = x643*x646;
  auto x648 = x252*x79;
  auto x649 = x643*x645;
  auto x650 = x648*x649;
  auto x651 = x634*x639;
  auto x652 = x157*x651;
  auto x653 = x168*x651;
  auto x654 = x279*x67;
  auto x655 = x236*x643;
  auto x656 = x654*x84;
  auto x657 = x631*x82;
  auto x658 = x218*x657;
  auto x659 = x12*x40;
  auto x660 = x302*x327;
  auto x661 = x660*x87;
  auto x662 = x288*x87;
  auto x663 = x292*x662;
  auto x664 = x302*x54;
  auto x665 = x4*x664;
  auto x666 = x113*x665;
  auto x667 = x218*x79;
  auto x668 = x210*x239;
  auto x669 = x667*x668;
  auto x670 = x238*x5;
  auto x671 = x670*x69;
  auto x672 = x29*x629;
  auto x673 = x189*x672;
  auto x674 = x135*x81;
  auto x675 = x116*x184;
  auto x676 = x674*x675;
  auto x677 = x29*x631;
  auto x678 = x676*x677;
  auto x679 = (3.0/16.0)*x9;
  auto x680 = x674*x679;
  auto x681 = x271*x643;
  auto x682 = x274*x679;
  auto x683 = x211*x643;
  auto x684 = x683*x81;
  auto x685 = x137*x634;
  auto x686 = x628*x679;
  auto x687 = x146*x634;
  auto x688 = x232*x247;
  auto x689 = x233*x75;
  auto x690 = x227*x259;
  auto x691 = -5.0/4.0*x230 - 5.0/4.0;
  auto x692 = x246*x691/std::pow(x41, 7.0/2.0);
  auto x693 = x244*x692;
  auto x694 = x128*x247;
  auto x695 = x241*x4;
  auto x696 = x410*x695;
  auto x697 = x249*x688;
  auto x698 = x156*x697;
  auto x699 = x252*x697;
  auto x700 = x250*x668;
  auto x701 = x233*x252;
  auto x702 = x668*x701;
  auto x703 = -x230 - 1;
  auto x704 = x300*x703/std::pow(x41, 3);
  auto x705 = x43*x704;
  auto x706 = x308*x705;
  auto x707 = x29*x679;
  auto x708 = x280*x707;
  auto x709 = x643*x674;
  auto x710 = x708*x709;
  auto x711 = x634*x707;
  auto x712 = x190*x711;
  auto x713 = x137*x211;
  auto x714 = x713*x82;
  auto x715 = x22*x688;
  auto x716 = x146*x211;
  auto x717 = x716*x82;
  auto x718 = x22*x259;
  auto x719 = x233*x718;
  auto x720 = x277*x82;
  auto x721 = x688*x720;
  auto x722 = x233*x259;
  auto x723 = x277*x722;
  auto x724 = x303*x46;
  auto x725 = x10*x83;
  auto x726 = x156*x725;
  auto x727 = x163*x725;
  auto x728 = x166*x727;
  auto x729 = x191*x84;
  auto x730 = x27*x83;
  auto x731 = x211*x730;
  auto x732 = x144*x279;
  auto x733 = x189*x732;
  auto x734 = -x129*x433 - x137*x731 - x146*x731 - x67*x729 - x724 - x726 - x728 - x733 - x90;
  auto x735 = -x106*x641 - x115*x641 - x197*x613 + x229*x688 + x243*x693 + x255*x671 + x289*x626 + x305*x705 + x307*x706 + x309*x663 + x312*x705 - x615 + x617 - x619 + x621 - x622 + x624 - x627*x630 - x631*x633 - x634*x636 - x634*x638 - x634*x656 - x647 - x650 - x652 - x653 - x654*x655 + x658 + x659*x661 + x662*x666 + x669 - x673 - x678 - x680*x681 - x682*x684 - x685*x686 - x686*x687 + x689*x690 + x694*x696 + x698 + x699 + x700 + x702 - x710 - x712 + x713*x719 + x714*x715 + x715*x717 + x716*x719 + x721 + x723 + x734 - x93;
  auto x736 = (2.0/3.0)*x7;
  auto x737 = x0/x288;
  auto x738 = p[5]*x17;
  auto x739 = x317*x738;
  auto x740 = x317*x613;
  auto x741 = x28*x3;
  auto x742 = x24*x27;
  auto x743 = x47*x90;
  auto x744 = x195*x743;
  auto x745 = x334*x91;
  auto x746 = x334*x93;
  auto x747 = x29*x46;
  auto x748 = x326*x747;
  auto x749 = x106*x332;
  auto x750 = x115*x332;
  auto x751 = x748 + x749 + x750;
  auto x752 = f[0]*x736 + x129*x343 + x137*x605 + x146*x605 + x175*x361 + x177*x361 + x194*x360 + x323*x741 + x323*x742 + x336*x84 + (27.0/4.0)*x737 + x739 + x740 + x744 + x745 + x746 + x751;
  auto x753 = (1.0/6.0)*f[0];
  auto x754 = x752*x753;
  auto x755 = x735 + x754;
  auto x756 = x195*x755;
  auto x757 = x194*x366;
  auto x758 = x106*x373 + x115*x373 + x130*x380 + x137*x609 + x146*x609 + x17*x499 + x175*x384 - x175*x390 + x177*x384 - x177*x390 - x178*x757 + x179*x757 + x365*x4 - x366*x743 + x367*x741 + x367*x742 + x368*x90 + x369*x91 + x369*x93 - x370*x741 - x370*x742 + x371*x747 + x375*x84 - x378*x91 - x378*x93 + x736 - 135.0/4.0*x0/std::pow(f[0], 6);
  auto x759 = x753*x758;
  auto x760 = x138*x84;
  auto x761 = x139*x320;
  auto x762 = (21.0/16.0)*x761;
  auto x763 = -x137*x762 - x146*x762 - x212*x347 - x256*x760 - x360*x733 - x361*x726 - x361*x728 - x744 - x748 + x759;
  auto x764 = (81.0/32.0)*x130;
  auto x765 = x212*x764;
  auto x766 = (63.0/4.0)*x627;
  auto x767 = x233*x318;
  auto x768 = x330*x9;
  auto x769 = (45.0/16.0)*x768;
  auto x770 = x106*x634;
  auto x771 = x115*x769;
  auto x772 = x747*x95;
  auto x773 = (27.0/16.0)*x772;
  auto x774 = x138*x85;
  auto x775 = (27.0/4.0)*x95;
  auto x776 = (45.0/4.0)*x768;
  auto x777 = x292*x309;
  auto x778 = x211*x670;
  auto x779 = x318*x643;
  auto x780 = (21.0/32.0)*x320;
  auto x781 = x357*x780;
  auto x782 = (21.0/32.0)*x761;
  auto x783 = x228*x336;
  auto x784 = x326*x341;
  auto x785 = x332*x705;
  auto x786 = (81.0/8.0)*x68;
  auto x787 = x82*x9;
  auto x788 = x688*x787;
  auto x789 = x146*x352;
  auto x790 = x239*x767;
  auto x791 = -x138*x655*x69 + x248*x349*x786 - x321*x766*x767 - x323*x615 + x323*x617 + x332*x626 - x334*x619 + x334*x621 + x335*x668*x689 + x343*x693 + x344*x785 + x346*x785 + x353*x788 + x353*x790 - x359*x643*x780 - x360*x673 - x360*x678 - x360*x710 - x360*x712 + x360*x721 + x360*x723 + x361*x624 - x361*x647 - x361*x650 - x361*x652 - x361*x653 + x361*x658 + x361*x669 + x361*x698 + x361*x699 + x361*x700 + x361*x702 - x4*x761*x766 + x40*x660*x775 - x634*x765 - x634*x771 - x634*x773 - x634*x774 + x666*x776 - x685*x782 - x687*x782 + x688*x783 + x705*x784 + x764*x778 - x769*x770 + x776*x777 - x779*x781 + x788*x789 + x789*x790;
  auto x792 = -x195*x735 - x740 - x746 - x750 - x756 + x763 + x791;
  auto x793 = x34*x89;
  auto x794 = x208*x400;
  auto x795 = x206*x30;
  auto x796 = x396*x795;
  auto x797 = x40*x450;
  auto x798 = x284*x303;
  auto x799 = x285*x51;
  auto x800 = x289*x292;
  auto x801 = x4*x455;
  auto x802 = x104*x460;
  auto x803 = x297*x466;
  auto x804 = x118*x31;
  auto x805 = x222*x804;
  auto x806 = x348*x87;
  auto x807 = x133*x134;
  auto x808 = x120*x232;
  auto x809 = x807*x808;
  auto x810 = x210*x212;
  auto x811 = x417*x627;
  auto x812 = x118*x239;
  auto x813 = x10*x812;
  auto x814 = x10*x421;
  auto x815 = x155*x407;
  auto x816 = x253*x815;
  auto x817 = x218*x429;
  auto x818 = x301*x449;
  auto x819 = x302*x659;
  auto x820 = x308*x818;
  auto x821 = x307*x664;
  auto x822 = x311*x466;
  auto x823 = x289*x302;
  auto x824 = x260*x436;
  auto x825 = x218*x824;
  auto x826 = x259*x260;
  auto x827 = x815*x826;
  auto x828 = x185*x409;
  auto x829 = x808*x87;
  auto x830 = x828*x829;
  auto x831 = x224*x29;
  auto x832 = x417*x831;
  auto x833 = x675*x832;
  auto x834 = x256*x812;
  auto x835 = x280*x834;
  auto x836 = x135*x222;
  auto x837 = x256*x421;
  auto x838 = x836*x837;
  auto x839 = x231*x416;
  auto x840 = x119*x839;
  auto x841 = x418*x422;
  auto x842 = x240*x81;
  auto x843 = x417*x75;
  auto x844 = x118*x247;
  auto x845 = x427*x844;
  auto x846 = x235*x67;
  auto x847 = x29*x51;
  auto x848 = x238*x420;
  auto x849 = x847*x848;
  auto x850 = x27*x849;
  auto x851 = x249*x840;
  auto x852 = x156*x851;
  auto x853 = x252*x851;
  auto x854 = x241*x258;
  auto x855 = x10*x436;
  auto x856 = x250*x855;
  auto x857 = x701*x855;
  auto x858 = x156*x417;
  auto x859 = x10*x259;
  auto x860 = x858*x859;
  auto x861 = x252*x417;
  auto x862 = x859*x861;
  auto x863 = x639*x644;
  auto x864 = x51*x848;
  auto x865 = x863*x864;
  auto x866 = x639*x648;
  auto x867 = x864*x866;
  auto x868 = (27.0/16.0)*x241;
  auto x869 = x432*x68;
  auto x870 = x51*x82*x869;
  auto x871 = x22*x840;
  auto x872 = x348*x442;
  auto x873 = x233*x872;
  auto x874 = x275*x417;
  auto x875 = x135*x271;
  auto x876 = x679*x864;
  auto x877 = x720*x840;
  auto x878 = x184*x732;
  auto x879 = x135*x233;
  auto x880 = x436*x879;
  auto x881 = x878*x880;
  auto x882 = x135*x417;
  auto x883 = x259*x882;
  auto x884 = x878*x883;
  auto x885 = x135*x280;
  auto x886 = x679*x849;
  auto x887 = x885*x886;
  auto x888 = x127*x845 + x137*x873 + x137*x874 + x146*x873 + x146*x874 + x211*x682*x864 - x215*x814 + x229*x840 + x256*x799 - x271*x813 + x289*x803 + x296*x801 + x305*x818 + x307*x820 + x312*x818 + x435*x694 + x453*x819 + x456*x800 + x460*x821 + x484*x854 + x689*x841 + x714*x871 + x717*x871 + x793 + x794 + x796 + x797*x798 + x800*x802 + x805 - x806*x809 - x810*x811 + x816 + x817 + x822*x823 + x825 + x827 - x830 - x833 - x835 - x838 + x842*x843 + x846*x850 + x852 + x853 + x856 + x857 + x860 + x862 + x865 + x867 + x868*x870 + x875*x876 + x877 + x881 + x884 + x887;
  auto x889 = x195*x47;
  auto x890 = x292*x332;
  auto x891 = x113*x801;
  auto x892 = x318*x322;
  auto x893 = x332*x818;
  auto x894 = x103*x460;
  auto x895 = x345*x54;
  auto x896 = x138*x483;
  auto x897 = x259*x339;
  auto x898 = x482*x69;
  auto x899 = x343*x844;
  auto x900 = x127*x426;
  auto x901 = x349*x486;
  auto x902 = x434*x487;
  auto x903 = x787*x840;
  auto x904 = x491*x492;
  auto x905 = x233*x904;
  auto x906 = x318*x356;
  auto x907 = x417*x906;
  auto x908 = x864*x9;
  auto x909 = x274*x9;
  auto x910 = x137*x905 + x137*x907 + x146*x905 + x146*x907 - 2*x195*x888 + x203*x340*x40 + (243.0/32.0)*x211*x870 - 63.0/16.0*x321*x494 + x326*x327*x797 + x326*x45*x847 + x332*x803 + x332*x891 + x334*x794 + x334*x796 + x344*x893 + x345*x822 + x346*x893 + x353*x903 - 63.0/16.0*x355*x471 + x360*x805 - x360*x830 - x360*x833 - x360*x835 - x360*x838 + x360*x877 + x360*x881 + x360*x884 + x360*x887 + x361*x816 + x361*x817 + x361*x825 + x361*x827 + x361*x852 + x361*x853 + x361*x856 + x361*x857 + x361*x860 + x361*x862 + x361*x865 + x361*x867 + x456*x890 - x472*x809*x9 + x484*x901 + x689*x896 + x694*x902 + x780*x864*x909 + x781*x908 + x783*x840 + x784*x818 + x789*x903 + x793*x889 + x802*x890 - x811*x892 + x843*x897 + x864*x898 + x894*x895 + x899*x900;
  auto x911 = 1.0/x32;
  auto x912 = (2.0/3.0)*x911;
  auto x913 = (1.0/6.0)*x32 - x912;
  auto x914 = std::tan(f[1]);
  auto x915 = 1.0/x914;
  auto x916 = (2.0/3.0)*x915;
  auto x917 = x213*x535;
  auto x918 = x173*x217;
  auto x919 = x519*x918;
  auto x920 = x284*x44;
  auto x921 = x104*x552;
  auto x922 = x297*x557;
  auto x923 = x116*x220;
  auto x924 = x539*x923;
  auto x925 = x831*x924;
  auto x926 = x265*x508;
  auto x927 = x508*x79;
  auto x928 = x121*x514;
  auto x929 = x243*x844;
  auto x930 = x151*x163;
  auto x931 = x519*x930;
  auto x932 = x253*x931;
  auto x933 = x149*x151;
  auto x934 = x524*x933;
  auto x935 = x253*x934;
  auto x936 = x302*x34;
  auto x937 = x311*x557;
  auto x938 = x826*x931;
  auto x939 = x826*x934;
  auto x940 = x213*x531;
  auto x941 = x211*x273;
  auto x942 = x144*x917;
  auto x943 = x265*x276;
  auto x944 = x541*x943;
  auto x945 = x135*x220;
  auto x946 = x259*x945;
  auto x947 = x279*x540;
  auto x948 = x946*x947;
  auto x949 = x227*x926 + x267*x532 + x267*x536 + x275*x942 + x289*x922 + x516*x854 + x547*x920 + x547*x936 + x552*x821 + x800*x921 - x810*x917 + x823*x937 + x842*x927 + x919 - x925 + x928*x929 + x932 + x935 + x938 + x939 + x940*x941 + x944 + x948;
  auto x950 = -x560*x913 - x560*x916 + x949;
  auto x951 = x195*x950;
  auto x952 = x327*x44;
  auto x953 = x29*x936;
  auto x954 = x103*x895;
  auto x955 = x351*x352;
  auto x956 = x135*x940;
  auto x957 = x332*x922 + x336*x926 + x345*x937 + (81.0/16.0)*x349*x572 - x360*x925 + x360*x944 + x360*x948 + x361*x919 + x361*x932 + x361*x935 + x361*x938 + x361*x939 + x532*x955 + x536*x955 + x552*x954 + x563*x952 + x563*x953 + x890*x921 - x892*x917 + x897*x927 + x899*x928 + x906*x942 + x906*x956;
  auto x958 = -x195*x949 + x957;
  auto x959 = -x569*x913 - x569*x916 - x951 + x958;
  auto x960 = x213*x586;
  auto x961 = x582*x918;
  auto x962 = x104*x595;
  auto x963 = x297*x598;
  auto x964 = x831*x923;
  auto x965 = x588*x964;
  auto x966 = x265*x576;
  auto x967 = x576*x79;
  auto x968 = x121*x578;
  auto x969 = x580*x933;
  auto x970 = x253*x969;
  auto x971 = x582*x930;
  auto x972 = x253*x971;
  auto x973 = x311*x598;
  auto x974 = x826*x969;
  auto x975 = x826*x971;
  auto x976 = x213*x584;
  auto x977 = x144*x960;
  auto x978 = x144*x589;
  auto x979 = x943*x978;
  auto x980 = x588*x732;
  auto x981 = x946*x980;
  auto x982 = x227*x966 + x267*x585 + x267*x587 + x275*x977 + x289*x963 + x579*x854 + x592*x920 + x592*x936 + x595*x821 + x800*x962 - x810*x960 + x823*x973 + x842*x967 + x929*x968 + x941*x976 + x961 - x965 + x970 + x972 + x974 + x975 + x979 + x981;
  auto x983 = (1.0/3.0)*x560;
  auto x984 = x915*x983;
  auto x985 = x911*x983;
  auto x986 = -x17*x984 + x17*x985 + x982;
  auto x987 = x195*x986;
  auto x988 = (1.0/3.0)*x569;
  auto x989 = x915*x988;
  auto x990 = x911*x988;
  auto x991 = x135*x976;
  auto x992 = x332*x963 + x336*x966 + x345*x973 - x360*x965 + x360*x979 + x360*x981 + x361*x961 + x361*x970 + x361*x972 + x361*x974 + x361*x975 + x579*x901 + x585*x955 + x587*x955 + x595*x954 + x602*x952 + x602*x953 + x890*x962 - x892*x960 + x897*x967 + x899*x968 + x906*x977 + x906*x991;
  auto x993 = -x17*x989 + x17*x990 - x195*x982 - x987 + x992;
  auto x994 = x949 - x984 + x985;
  auto x995 = x195*x994;
  auto x996 = x958 - x989 + x990 - x995;
  auto x997 = -x195*x496 + x366*x469 - x498 + x503;
  auto x998 = x18*x87;
  auto x999 = x16*x998;
  auto x1000 = x147*x16;
  auto x1001 = x1000*x87;
  auto x1002 = x18*x402;
  auto x1003 = x147*x402;
  auto x1004 = x106*x289;
  auto x1005 = x12*x797;
  auto x1006 = x103*x455;
  auto x1007 = x1006*x460;
  auto x1008 = x457*x466;
  auto x1009 = 10*x147 - x148 - 10*x18;
  auto x1010 = x1009*x174;
  auto x1011 = -4*x111 - x33;
  auto x1012 = x1011*x109;
  auto x1013 = x807*x86;
  auto x1014 = x17*x628;
  auto x1015 = x118*x417;
  auto x1016 = x1013*x348;
  auto x1017 = 1.0/x118;
  auto x1018 = x1017*x18;
  auto x1019 = x1018*x80;
  auto x1020 = x1019*x863;
  auto x1021 = x1019*x866;
  auto x1022 = x279*x419;
  auto x1023 = x413 + 1;
  auto x1024 = x439*x86;
  auto x1025 = x1024*x815;
  auto x1026 = x79*x815;
  auto x1027 = x436*x87;
  auto x1028 = x1026*x1027;
  auto x1029 = x242*x69;
  auto x1030 = x18*x420;
  auto x1031 = x1030*x432;
  auto x1032 = x1023*x640;
  auto x1033 = x1023*x639;
  auto x1034 = x1033*x157;
  auto x1035 = x1033*x168;
  auto x1036 = x185*x83;
  auto x1037 = x17*x29;
  auto x1038 = x1037*x86;
  auto x1039 = x1036*x1038;
  auto x1040 = x1015*x86;
  auto x1041 = x1040*x828;
  auto x1042 = x443*x679;
  auto x1043 = x1018*x348;
  auto x1044 = -x414 - 1.0/4.0;
  auto x1045 = x1044*x77;
  auto x1046 = x415/x121;
  auto x1047 = x1045*x1046;
  auto x1048 = x418*x421;
  auto x1049 = x1048*x843;
  auto x1050 = x416*x425;
  auto x1051 = x1050*x423;
  auto x1052 = x1023*x686;
  auto x1053 = x119*x900;
  auto x1054 = x1053*x242;
  auto x1055 = x1037*x210;
  auto x1056 = x1047*x249;
  auto x1057 = x1056*x156;
  auto x1058 = x1056*x252;
  auto x1059 = x1027*x858;
  auto x1060 = x1027*x861;
  auto x1061 = x135*x708;
  auto x1062 = x1019*x1061;
  auto x1063 = x1047*x22;
  auto x1064 = x137*x417;
  auto x1065 = x22*x348;
  auto x1066 = x1065*x421;
  auto x1067 = x146*x417;
  auto x1068 = x1023*x707;
  auto x1069 = x1068*x190;
  auto x1070 = x1047*x720;
  auto x1071 = x185*x80;
  auto x1072 = x1071*x422;
  auto x1073 = x1072*x882;
  auto x1074 = x1001 - x1002 + x1003 - x1004 + x1005*x204 + x1007*x662 + x1008*x662 + x1010 + x1012*x462 - x1013*x1014 - x1015*x1016 - x1018*x1022 - x1018*x1042 - x1020 - x1021 + x1023*x636 + x1023*x638 + x1023*x656 + x1025 + x1028 + x1029*x1031 + x1032*x106 + x1032*x115 + x1034 + x1035 - x1039 - x1041 - x1043*x682 + x1047*x229 + x1049*x187 + x1051*x243 + x1052*x137 + x1052*x146 + x1054*x1055 + x1057 + x1058 + x1059 + x1060 - x1062 + x1063*x714 + x1063*x717 + x1064*x1066 + x1066*x1067 + x1069 + x1070 + x1073 - x197*x738 + x734 - x91 - x999;
  auto x1075 = x1074 + x754;
  auto x1076 = x1075*x195;
  auto x1077 = x114*x332;
  auto x1078 = (63.0/4.0)*x807;
  auto x1079 = x417*x470;
  auto x1080 = x1023*x106;
  auto x1081 = x1031*x68;
  auto x1082 = x1018*x9;
  auto x1083 = (21.0/32.0)*x1082*x382;
  auto x1084 = x1023*x782;
  auto x1085 = x1047*x787;
  auto x1086 = x1064*x492;
  auto x1087 = (21.0/8.0)*x382;
  auto x1088 = x1067*x492;
  auto x1089 = x1001*x323 - x1002*x334 + x1003*x334 + x1007*x776 + x1008*x776 + x1010*x361 + x1012*x1077 - x1019*x898 - x1020*x361 - x1021*x361 + x1023*x765 + x1023*x771 + x1023*x773 + x1023*x774 + x1025*x361 + x1028*x361 + x1034*x361 + x1035*x361 - x1039*x360 - x1041*x360 + x1047*x783 + x1051*x343 + x1053*x212*x434*x786 + x1057*x361 + x1058*x361 + x1059*x361 + x1060*x361 - x1062*x360 + x1069*x360 + x1070*x360 + x1073*x360 - x1078*x1079*x382 - x1078*x17*x761 + x1080*x769 + (81.0/32.0)*x1081*x212 - x1083*x274 - x1083*x357 + x1084*x137 + x1084*x146 + x1085*x353 + x1085*x789 + x1086*x1087 + x1087*x1088 + x203*x775*x797 - x323*x999 + x336*x436*x843;
  auto x1090 = -x1074*x195 - x1076 + x1089 - x739 - x745 - x749 + x763;
  auto x1091 = std::tan(f[2]);
  auto x1092 = 1.0/x1091;
  auto x1093 = x1092*x983;
  auto x1094 = 1.0/x33;
  auto x1095 = (1.0/3.0)*x1094;
  auto x1096 = x1095*x601;
  auto x1097 = x348*x404;
  auto x1098 = x173*x407;
  auto x1099 = x1098*x524;
  auto x1100 = x34*x450;
  auto x1101 = x12*x546;
  auto x1102 = x44*x453;
  auto x1103 = x307*x455;
  auto x1104 = x457*x557;
  auto x1105 = x17*x551;
  auto x1106 = x465*x556;
  auto x1107 = x220*x410;
  auto x1108 = x1107*x540;
  auto x1109 = x439*x508;
  auto x1110 = x120*x514;
  auto x1111 = x429*x931;
  auto x1112 = x429*x934;
  auto x1113 = x119*x928;
  auto x1114 = x824*x931;
  auto x1115 = x824*x934;
  auto x1116 = x442*x445;
  auto x1117 = x276*x439;
  auto x1118 = x1117*x541;
  auto x1119 = x436*x945;
  auto x1120 = x1119*x947;
  auto x1121 = -x1097*x940 + x1099 + x1100*x547 + x1101*x1102 + x1103*x552 + x1104*x289 + x1105*x459 + x1106*x462 - x1108 + x1109*x227 + x1110*x427 + x1111 + x1112 + x1113*x435 + x1114 + x1115 + x1116*x917 + x1118 + x1120 + x441*x532 + x441*x536 + x841*x927 + x872*x956;
  auto x1122 = -x1093*x4 + x1096*x4 + x1121;
  auto x1123 = x1122*x195;
  auto x1124 = x1092*x988;
  auto x1125 = x1095*x607;
  auto x1126 = x470*x472;
  auto x1127 = x1100*x29;
  auto x1128 = x203*x44;
  auto x1129 = x1006*x332;
  auto x1130 = x105*x332;
  auto x1131 = x343*x426;
  auto x1132 = x352*x489;
  auto x1133 = x1077*x1106 + x1099*x361 + x1104*x332 + x1105*x1130 - x1108*x360 + x1109*x336 + x1110*x1131 + x1111*x361 + x1112*x361 + x1113*x902 + x1114*x361 + x1115*x361 + x1118*x360 + x1120*x360 - x1126*x940 + x1127*x563 + x1128*x563 + x1129*x552 + x1132*x532 + x1132*x536 + x896*x927 + x904*x942 + x904*x956;
  auto x1134 = -x1121*x195 + x1133;
  auto x1135 = -x1123 - x1124*x4 + x1125*x4 + x1134;
  auto x1136 = x1098*x580;
  auto x1137 = x12*x591;
  auto x1138 = x457*x598;
  auto x1139 = x17*x594;
  auto x1140 = x465*x597;
  auto x1141 = x1107*x144;
  auto x1142 = x1141*x588;
  auto x1143 = x439*x576;
  auto x1144 = x120*x578;
  auto x1145 = x429*x969;
  auto x1146 = x429*x971;
  auto x1147 = x119*x968;
  auto x1148 = x824*x969;
  auto x1149 = x824*x971;
  auto x1150 = x1117*x978;
  auto x1151 = x1119*x980;
  auto x1152 = -x1097*x976 + x1100*x592 + x1102*x1137 + x1103*x595 + x1116*x960 + x1136 + x1138*x289 + x1139*x459 + x1140*x462 - x1142 + x1143*x227 + x1144*x427 + x1145 + x1146 + x1147*x435 + x1148 + x1149 + x1150 + x1151 + x441*x585 + x441*x587 + x841*x967 + x872*x991;
  auto x1153 = (2.0/3.0)*x1094;
  auto x1154 = -x1153 + (1.0/6.0)*x33;
  auto x1155 = (2.0/3.0)*x1092;
  auto x1156 = x1152 - x1154*x560 - x1155*x601;
  auto x1157 = x1156*x195;
  auto x1158 = x1077*x1140 - x1126*x976 + x1127*x602 + x1128*x602 + x1129*x595 + x1130*x1139 + x1131*x1144 + x1132*x585 + x1132*x587 + x1136*x361 + x1138*x332 - x1142*x360 + x1143*x336 + x1145*x361 + x1146*x361 + x1147*x902 + x1148*x361 + x1149*x361 + x1150*x360 + x1151*x360 + x896*x967 + x904*x977 + x904*x991;
  auto x1159 = -x1152*x195 - x1154*x569 - x1155*x607 - x1157 + x1158;
  auto x1160 = -x1093 + x1096 + x1121;
  auto x1161 = x1160*x195;
  auto x1162 = -x1124 + x1125 + x1134 - x1161;
  auto x1163 = -x195*x568 + x366*x560 - x570 + x574;
  auto x1164 = (1.0/6.0)*x102;
  auto x1165 = x162 + 2;
  auto x1166 = (1.0/18.0)*f[0];
  auto x1167 = x1165*x1166;
  auto x1168 = (1.0/4.0)*x72;
  auto x1169 = (1.0/4.0)*x74;
  auto x1170 = -x1168 + x1169;
  auto x1171 = x227*x83;
  auto x1172 = (9.0/4.0)*x124;
  auto x1173 = (9.0/4.0)*x126;
  auto x1174 = -x1172 + x1173;
  auto x1175 = x1174*x515;
  auto x1176 = (1.0/4.0)*x152;
  auto x1177 = (1.0/4.0)*x153;
  auto x1178 = -x1176 + x1177;
  auto x1179 = x1178*x525;
  auto x1180 = (1.0/4.0)*x164;
  auto x1181 = (1.0/4.0)*x165;
  auto x1182 = -x1180 + x1181;
  auto x1183 = x1182*x520;
  auto x1184 = -x37 + x39;
  auto x1185 = x1184*x303;
  auto x1186 = -x97 + x98;
  auto x1187 = x1186*x33;
  auto x1188 = -x107 + x108;
  auto x1189 = x112*x1188;
  auto x1190 = (1.0/4.0)*x131;
  auto x1191 = (1.0/4.0)*x132;
  auto x1192 = -x1190 + x1191;
  auto x1193 = x1192*x136;
  auto x1194 = (1.0/4.0)*x141;
  auto x1195 = (1.0/4.0)*x142;
  auto x1196 = -x1194 + x1195;
  auto x1197 = x1196*x145;
  auto x1198 = (1.0/4.0)*x181;
  auto x1199 = (1.0/4.0)*x182;
  auto x1200 = -x1198 + x1199;
  auto x1201 = x180*x193;
  auto x1202 = x1200*x1201;
  auto x1203 = x1170*x1171 + x1175*x243 + x1179 + x1183 + x1185*x543 + x1187*x459 + x1189*x462 + x1193*x528 + x1197*x528 + x1202;
  auto x1204 = x1164*x314 + x1167*x752 + x1203;
  auto x1205 = x1204*x195;
  auto x1206 = x1167*x758;
  auto x1207 = x1077*x1189 + x1130*x1187 + x1170*x561 + x1175*x343 + x1179*x361 + x1183*x361 + x1184*x326*x562 + x1193*x605 + x1197*x605 + x1202*x360;
  auto x1208 = -x1203*x195 + x1207;
  auto x1209 = x1164*x363 - x1205 + x1206 + x1208;
  auto x1210 = x1168 - x1169;
  auto x1211 = x1172 - x1173;
  auto x1212 = x1211*x515;
  auto x1213 = x1180 - x1181;
  auto x1214 = x1213*x520;
  auto x1215 = x1176 - x1177;
  auto x1216 = x1215*x525;
  auto x1217 = x1190 - x1191;
  auto x1218 = x1217*x136;
  auto x1219 = x1194 - x1195;
  auto x1220 = x1219*x145;
  auto x1221 = x1198 - x1199;
  auto x1222 = x1201*x1221;
  auto x1223 = x1004 + x1171*x1210 + x1212*x243 + x1214 + x1216 + x1218*x528 + x1220*x528 + x1222 + x622 + x724;
  auto x1224 = -x1223*x195;
  auto x1225 = (1.0/3.0)*x33;
  auto x1226 = x1225*x469;
  auto x1227 = (1.0/3.0)*x32;
  auto x1228 = x1227*x314;
  auto x1229 = (1.0/9.0)*f[0];
  auto x1230 = x1229*x752;
  auto x1231 = x1230*x4;
  auto x1232 = x1223 - x1226*x4 - x1228*x17 + x1231*x17;
  auto x1233 = x1232*x195;
  auto x1234 = x1225*x497;
  auto x1235 = x1227*x363;
  auto x1236 = x1229*x758;
  auto x1237 = x1236*x4;
  auto x1238 = x1210*x561 + x1212*x343 + x1214*x361 + x1216*x361 + x1218*x605 + x1220*x605 + x1222*x360 + x751;
  auto x1239 = x1237*x17 + x1238;
  auto x1240 = x1224 - x1233 - x1234*x4 - x1235*x17 + x1239;
  auto x1241 = x1203 - x1228 + x1231;
  auto x1242 = x1241*x195;
  auto x1243 = x1208 - x1235 + x1237 - x1242;
  auto x1244 = -x195*x606 + x366*x601 - x608 + x611;
  auto x1245 = (1.0/6.0)*x111;
  auto x1246 = x147 + 2;
  auto x1247 = x1166*x1246;
  auto x1248 = x1203 + x1245*x469 + x1247*x752;
  auto x1249 = x1248*x195;
  auto x1250 = x1247*x758;
  auto x1251 = x1208 + x1245*x497 - x1249 + x1250;
  auto x1252 = x1223 - x1226 + x1230*x17;
  auto x1253 = x1252*x195;
  auto x1254 = x1236*x17 + x1238;
  auto x1255 = x1224 - x1234 - x1253 + x1254;
  auto x1256 = x1203 + x1230;
  auto x1257 = x1256*x195;
  auto x1258 = x1208 + x1236 - x1257;
  auto x1259 = (15.0/4.0)*x316;
  auto x1260 = (3.0/4.0)*x316;
  auto x1261 = (75.0/16.0)*x768;
  auto x1262 = x334*x9;
  auto x1263 = (15.0/16.0)*x1262;
  auto x1264 = x6*x679;
  auto x1265 = x1264*x58;
  auto x1266 = (15.0/16.0)*x768;
  auto x1267 = x323*x9;
  auto x1268 = (1.0/16.0)*x1267;
  auto x1269 = x3*x6;
  auto x1270 = x52*x889*x9;
  auto x1271 = x129*x342;
  auto x1272 = (7.0/8.0)*x761;
  auto x1273 = x22*x361;
  auto x1274 = (1.0/4.0)*x68;
  auto x1275 = x1229*x7 + x1268*x1269 + x1268*x24 - 15.0/8.0*x1270 - x1271*x86 - x1272*x137 - x1272*x146 - x1273*x157 - x1273*x168 - x1274*x190*x360 - x138*x729 + (9.0/8.0)*x737 + x759 - 45.0/16.0*x772;
  auto x1276 = (1.0/3.0)*f[0];
  auto x1277 = 9*x9;
  auto x1278 = 27*x9;
  auto x1279 = x61*x83;
  auto x1280 = x43*x634;
  auto x1281 = x304*x635;
  auto x1282 = x1280*x1281;
  auto x1283 = x1280*x640;
  auto x1284 = x1283*x344;
  auto x1285 = x1283*x346;
  auto x1286 = x215*x318;
  auto x1287 = x241*x80;
  auto x1288 = x1287*x383;
  auto x1289 = x242*x248;
  auto x1290 = x29*x61;
  auto x1291 = x288*x61;
  auto x1292 = x302*x346;
  auto x1293 = x250*x82;
  auto x1294 = x252*x265;
  auto x1295 = (27.0/16.0)*x634;
  auto x1296 = x1295*x68;
  auto x1297 = x1295*x288;
  auto x1298 = (27.0/16.0)*x779;
  auto x1299 = x218*x83;
  auto x1300 = x29*x67;
  auto x1301 = x1300*x87;
  auto x1302 = x1029*x634;
  auto x1303 = x1302*x244;
  auto x1304 = x156*x82;
  auto x1305 = x76*x78;
  auto x1306 = x1305*x651;
  auto x1307 = x252*x82;
  auto x1308 = x130*x241;
  auto x1309 = std::pow(x4, 3);
  auto x1310 = (9.0/32.0)*x1309;
  auto x1311 = x634*x654;
  auto x1312 = x1311*x228;
  auto x1313 = x338*x654;
  auto x1314 = std::pow(x32, -5.0/2.0);
  auto x1315 = x1309*x1314;
  auto x1316 = x67*x69;
  auto x1317 = x239*x646;
  auto x1318 = x239*x648;
  auto x1319 = x1318*x645;
  auto x1320 = x166*x623;
  auto x1321 = x61*x79;
  auto x1322 = (27.0/32.0)*x644;
  auto x1323 = x1315*x318;
  auto x1324 = (27.0/32.0)*x648;
  auto x1325 = x222*x68;
  auto x1326 = x4*x627;
  auto x1327 = (27.0/2.0)*x211;
  auto x1328 = x30*x688;
  auto x1329 = x12*x68;
  auto x1330 = x1280*x301;
  auto x1331 = x670*x68;
  auto x1332 = (27.0/16.0)*x9;
  auto x1333 = x1330*x1332*x288;
  auto x1334 = x318*x634;
  auto x1335 = x1334*x239;
  auto x1336 = x643*x81;
  auto x1337 = x10*x265;
  auto x1338 = x299*x703;
  auto x1339 = x119*x246*x78;
  auto x1340 = x1339*x651;
  auto x1341 = x211*x82;
  auto x1342 = x1341*x679;
  auto x1343 = x1305*x1342;
  auto x1344 = x259*x679;
  auto x1345 = x1344*x875;
  auto x1346 = x211*x274;
  auto x1347 = x1344*x1346;
  auto x1348 = x1310*x1314;
  auto x1349 = x318*x875;
  auto x1350 = x211*x359;
  auto x1351 = x218*x82;
  auto x1352 = x218*x233;
  auto x1353 = x659*x705;
  auto x1354 = x113*x4;
  auto x1355 = x54*x705;
  auto x1356 = x222*x674;
  auto x1357 = (27.0/2.0)*x68;
  auto x1358 = x184*x4;
  auto x1359 = x135*x265;
  auto x1360 = x185*x256;
  auto x1361 = x233*x649;
  auto x1362 = (9.0/32.0)*x239;
  auto x1363 = x186*x82;
  auto x1364 = x1363*x711;
  auto x1365 = x1339*x1342;
  auto x1366 = x232*x692;
  auto x1367 = x1061*x259;
  auto x1368 = x688*x75;
  auto x1369 = x1366*x249;
  auto x1370 = x300*x43*x703*(-3.0/2.0*x230 - 3.0/2.0)/std::pow(x41, 4);
  auto x1371 = x307*x308;
  auto x1372 = x280*x68;
  auto x1373 = x156*x688;
  auto x1374 = x259*x61;
  auto x1375 = x252*x688;
  auto x1376 = x643*x69;
  auto x1377 = x135*x1372;
  auto x1378 = x1377*x259;
  auto x1379 = x1366*x22;
  auto x1380 = x688*x859;
  auto x1381 = x135*x688;
  auto x1382 = x205 - x287;
  auto x1383 = x1382 + x362*x753;
  auto x1384 = x399 - x454;
  auto x1385 = x1384 + x496*x753;
  auto x1386 = x289*x625;
  auto x1387 = x118*x405;
  auto x1388 = x242*x500;
  auto x1389 = x10*x439;
  auto x1390 = x451*x635;
  auto x1391 = x203*x285;
  auto x1392 = x651*x83;
  auto x1393 = x436*x863;
  auto x1394 = x436*x866;
  auto x1395 = x1022*x421;
  auto x1396 = x659*x818;
  auto x1397 = x847*x87;
  auto x1398 = x54*x818;
  auto x1399 = x1398*x662;
  auto x1400 = x460*x663;
  auto x1401 = x466*x662;
  auto x1402 = x118*x280;
  auto x1403 = x405*x470;
  auto x1404 = x4*x80;
  auto x1405 = x1357*x675;
  auto x1406 = x840*x86;
  auto x1407 = x211*x239;
  auto x1408 = x421*x87;
  auto x1409 = x1408*x632;
  auto x1410 = x439*x651;
  auto x1411 = x644*x9;
  auto x1412 = (9.0/32.0)*x1411;
  auto x1413 = x421*x643;
  auto x1414 = x648*x9;
  auto x1415 = (9.0/32.0)*x1414;
  auto x1416 = x436*x634;
  auto x1417 = x1336*x654;
  auto x1418 = x27*x439;
  auto x1419 = x419*x421;
  auto x1420 = x1042*x421;
  auto x1421 = x446*x679;
  auto x1422 = x233*x668;
  auto x1423 = x218*x417;
  auto x1424 = x449*x704;
  auto x1425 = x1355*x307;
  auto x1426 = x289*x705;
  auto x1427 = x260*x864;
  auto x1428 = x241*x671;
  auto x1429 = x1402*x80;
  auto x1430 = x135*x439;
  auto x1431 = x1430*x184;
  auto x1432 = x135*x80;
  auto x1433 = x185*x239*x29;
  auto x1434 = x1408*x29*x675;
  auto x1435 = x1061*x436;
  auto x1436 = x679*x684;
  auto x1437 = x211*x439*x679;
  auto x1438 = (3.0/32.0)*x135;
  auto x1439 = (3.0/32.0)*x634;
  auto x1440 = x1439*x9;
  auto x1441 = x445*x494;
  auto x1442 = x247*x839;
  auto x1443 = x75*x840;
  auto x1444 = x237*x864;
  auto x1445 = x118*x692;
  auto x1446 = x127*x427;
  auto x1447 = x247*x696;
  auto x1448 = x1442*x249;
  auto x1449 = x668*x840;
  auto x1450 = x10*x864;
  auto x1451 = x241*x61*x82*x847;
  auto x1452 = x186*x439;
  auto x1453 = x1372*x1438;
  auto x1454 = x1442*x22;
  auto x1455 = x718*x840;
  auto x1456 = x688*x872;
  auto x1457 = x27*x864;
  auto x1458 = x1457*x233;
  auto x1459 = x186*x850;
  auto x1460 = x10*x1387 - x1026*x649 + x1027*x1352 - x1064*x1436 - x1067*x1436 - x1097*x688*x807 + x118*x1357*x1404*x221 + x128*x435*x692 - x1302*x484 - x1311*x481 + x1320*x429 + x1320*x824 - x1341*x629*x811 + x1351*x1406 + x1353*x453 + x1354*x1399 + x1368*x841 + x137*x1456 + x1371*x1424 + x1373*x855 + x1375*x855 + x1376*x1402 - x1377*x1439*x436 + x1381*x436*x878 + x1386*x456 + x1386*x802 - 27.0/32.0*x1388*x634 - 27.0/16.0*x1388 - x1389*x156 - x1389*x252 - x1390*x634 - x1391*x651 - x1392*x815 - x1393 - x1394 - x1395 + x1396*x327*x87 - x1397*x1432*x221*x420 + x1397*x819 + x1400*x664 + x1401*x665 + x1402*x257 + (9.0/16.0)*x1403*x634 + x1405*x808 - x1406*x29*x676 - x1406*x633 - x1407*x809*x87 - x1409*x233 - x1410*x156 - x1410*x252 - x1412*x1413 - x1412*x1416 - x1413*x1415 - x1413*x1453 - x1413*x707*x846 - x1415*x1416 - x1417*x843 - x1418*x713 - x1418*x716 - x1419*x711 - x1420 - x1421 + x1422*x815 + x1423*x668 + x1424*x305 + x1424*x312 + x1425*x460 + x1426*x822 + x1427*x218 + x1428*x484 + x1429*x634*x69 - x1431*x672 - x1431*x732 - x1433*x829 - x1434*x879 - x1435 - x1437*x685 - x1437*x687 - x1438*x492*x681 - x1439*x1441 - x1440*x421*x443 + x1442*x229 + x1442*x720 + x1443*x690 + x1444*x689 + x1445*x1446 + x1447*x900 + x1448*x156 + x1448*x252 + x1449*x156 + x1449*x252 + x1450*x250 + x1450*x701 + x1451*x694 - x1452*x711 + x1454*x714 + x1454*x717 + x1455*x713 + x1455*x716 + x1456*x146 + x1458*x713 + x1458*x716 + x1459*x233 - x185*x410*x688 - x185*x417*x707*x709 - x214*x420*x51*x806 - x237*x481 + (27.0/32.0)*x241*x500*x670 + x259*x277*x840 + x400*x618 - x400*x620 + x403 - x433*x484 - x452 - x458 - x467 + (9.0/16.0)*x471*x683 - x477*x641 - x478*x641 - x479*x641 - x480*x641 - 3.0/32.0*x495*x683 - x649*x858 - x649*x861 + x663*x820 + x697*x815 - x725*x815;
  auto x1461 = x913*x994;
  auto x1462 = (4.0/3.0)*x915;
  auto x1463 = x151*x727;
  auto x1464 = x725*x933;
  auto x1465 = x188*x541;
  auto x1466 = -x1463*x519 - x1464*x524 - x1465*x279 - x237*x509 - x433*x516 - x532*x731 - x536*x731 - x548;
  auto x1467 = x1466 + x568*x753;
  auto x1468 = x173*x623;
  auto x1469 = x134*x535;
  auto x1470 = x212*x631*x81;
  auto x1471 = x543*x69;
  auto x1472 = x1471*x634;
  auto x1473 = x649*x79;
  auto x1474 = x151*x217;
  auto x1475 = x1474*x519;
  auto x1476 = x663*x664;
  auto x1477 = x662*x665;
  auto x1478 = x668*x79;
  auto x1479 = x180*x539;
  auto x1480 = x188*x672;
  auto x1481 = x116*x1479;
  auto x1482 = x674*x677;
  auto x1483 = x680*x683;
  auto x1484 = x634*x686;
  auto x1485 = x227*x82;
  auto x1486 = x1485*x688;
  auto x1487 = x233*x690;
  auto x1488 = x1445*x243;
  auto x1489 = x34*x705;
  auto x1490 = x540*x707;
  auto x1491 = x220*x709;
  auto x1492 = x1341*x715;
  auto x1493 = x211*x719;
  auto x1494 = x276*x541;
  auto x1495 = x688*x82;
  auto x1496 = -x1101*x1472 + x1101*x661 - x1302*x516 - x1311*x509 + x1386*x921 - x1392*x931 - x1392*x934 - x1417*x927 + x1422*x931 + x1422*x934 + x1425*x552 + x1426*x937 + x1428*x516 - x1436*x942 + x1447*x928 - x1465*x711 + x1468*x519 - x1469*x1470 - x1469*x630 - x1473*x931 - x1473*x934 + x1475*x1478 + x1475*x657 + x1476*x552 + x1477*x557 - x1479*x1480 - x1481*x1482 - x1483*x940 - x1484*x532 - x1484*x536 + x1486*x508 + x1487*x508 + x1488*x928 + x1489*x547 - x1490*x1491 + x1492*x532 + x1492*x536 + x1493*x532 + x1493*x536 + x1494*x1495 + x1494*x722 - x558 - x564*x641 - x565*x641 + x697*x931 + x697*x934;
  auto x1497 = x1467 + x1496;
  auto x1498 = x916*x994;
  auto x1499 = x912*x950;
  auto x1500 = x188*x589;
  auto x1501 = -x1463*x582 - x1464*x580 - x1500*x732 - x237*x577 - x433*x579 - x585*x731 - x587*x731 - x593;
  auto x1502 = x1501 + x606*x753;
  auto x1503 = x134*x586;
  auto x1504 = x1474*x582;
  auto x1505 = x116*x589;
  auto x1506 = x144*x588;
  auto x1507 = x1506*x707;
  auto x1508 = x144*x1500;
  auto x1509 = x276*x978;
  auto x1510 = -x1137*x1472 + x1137*x661 - x1302*x579 - x1311*x577 + x1386*x962 - x1392*x969 - x1392*x971 - x1417*x967 + x1422*x969 + x1422*x971 + x1425*x595 + x1426*x973 + x1428*x579 - x1436*x977 + x1447*x968 + x1468*x582 - x1470*x1503 - x1473*x969 - x1473*x971 + x1476*x595 + x1477*x598 + x1478*x1504 - x1480*x589 - x1482*x1505 - x1483*x976 - x1484*x585 - x1484*x587 + x1486*x576 + x1487*x576 + x1488*x968 + x1489*x592 - x1491*x1507 + x1492*x585 + x1492*x587 + x1493*x585 + x1493*x587 + x1495*x1509 - x1503*x630 + x1504*x657 - x1508*x711 + x1509*x722 - x599 - x603*x641 - x604*x641 + x697*x969 + x697*x971;
  auto x1511 = x1384 + x1460 + x497*x753;
  auto x1512 = x289*x297;
  auto x1513 = x215*x81;
  auto x1514 = (9.0/16.0)*x1023;
  auto x1515 = x1019*x639;
  auto x1516 = x1009*x155;
  auto x1517 = x311*x823;
  auto x1518 = x1023*x69;
  auto x1519 = x1018*x639;
  auto x1520 = x17*x807;
  auto x1521 = x120*x839;
  auto x1522 = x210*x238;
  auto x1523 = x404*x417;
  auto x1524 = x1018*x239;
  auto x1525 = (9.0/32.0)*x1318;
  auto x1526 = x1018*x418;
  auto x1527 = x1526*x279;
  auto x1528 = x265*x27;
  auto x1529 = x1023*x654;
  auto x1530 = x815*x82;
  auto x1531 = x417*x815;
  auto x1532 = x1023*x1281;
  auto x1533 = x1029*x1030;
  auto x1534 = x1023*x1029;
  auto x1535 = x302*x344;
  auto x1536 = x1023*x318;
  auto x1537 = x1287*x4;
  auto x1538 = x1043*x679;
  auto x1539 = x1538*x233;
  auto x1540 = (3.0/32.0)*x1082*x239;
  auto x1541 = x1044*x1046;
  auto x1542 = x119*x1541*x231;
  auto x1543 = x1048*x187;
  auto x1544 = x1047*x75;
  auto x1545 = x1050*x127;
  auto x1546 = x1023*x679;
  auto x1547 = x1546*x265;
  auto x1548 = (3.0/32.0)*x1023;
  auto x1549 = x1548*x239;
  auto x1550 = x1055*x242;
  auto x1551 = x1542*x249;
  auto x1552 = x1027*x840;
  auto x1553 = x1047*x859;
  auto x1554 = x1019*x186;
  auto x1555 = x1542*x22;
  auto x1556 = x1066*x840;
  auto x1557 = x1047*x275;
  auto x1558 = x417*x713;
  auto x1559 = x417*x716;
  auto x1560 = x1359*x185;
  auto x1561 = -x10*x1293 - x10*x1294 + x10*x1513 + x1005*x1397 + x1012*x1512 + x1012*x1517 + x1015*x1405 - x1016*x1521 - x1018*x235*x387*x707 + x1018*x69*x836 + (27.0/32.0)*x1023*x1288 + x1027*x1423 + x1027*x233*x815 + x1032*x1292 + x1032*x1535 + x1032*x333 + x1033*x1293 + x1033*x1294 + x1033*x1299 - x1037*x185*x657 + x1047*x135*x259*x878 - x1047*x627*x810 - x1047*x675*x831 + x1051*x854 + x1053*x1451 + x1056*x218 + x1068*x1560 + x1068*x338*x67 + x1072*x135*x840 + (27.0/32.0)*x1081*x1537 - x1082*x1525 - x1286*x1514 - 27.0/16.0*x1288 - x1313 - x1317 - x1319 + (27.0/2.0)*x1325*x434 - x1345 - x1346*x1540 - x1347 + x1349*x1549 + x1350*x1549 - x1356*x1518 + x1356*x256 - x1359*x878 + x1362*x1536*x644 - x1367 - x137*x1539 + x137*x1556 + x137*x1557 + x1378*x1548 + x1396*x204 + x1399*x894 + x1400*x455 + x1401*x311*x818 + x1401*x801 + x1406*x1530 - x1407*x1523*x807 - x1409*x417 - x1412*x1524 + x1427*x815 - x1433*x1523 - x1434*x882 + x1443*x1543 + x1444*x843 + x1450*x858 + x1450*x861 - x1453*x1524 + x1457*x1558 + x1457*x1559 + x1459*x417 - x146*x1539 + x146*x1556 + x146*x1557 - x147*x795 + x1514*x288*x329 - x1515*x250 - x1515*x667 - x1515*x701 + x1516*x253 + x1516*x826 + x1518*x286 + x1519*x215 - x1520*x211*x657 - x1521*x828*x86 - x1522*x271*x51 - x1522*x280*x847 + x1525*x1536 - x1527*x689 - x1528*x713 - x1528*x716 + x1529*x337 + x1531*x668 + x1532*x302 + x1533*x694 + x1534*x248 - x1540*x875 + x1542*x229 + x1542*x720 + x1544*x842 + x1545*x929 + x1547*x713 + x1547*x716 + x1550*x247*x900 + x1551*x156 + x1551*x252 + x1552*x156 + x1552*x252 + x1553*x156 + x1553*x252 - x1554*x233*x707 + x1555*x714 + x1555*x717 + x18*x795 + x209 - x218*x725 - x237*x337 - x248*x433 - x295 - x306 - x310;
  auto x1562 = x1382 + x1561 + x363*x753;
  auto x1563 = (1.0/3.0)*x1092;
  auto x1564 = x1563*x994;
  auto x1565 = x1095*x986;
  auto x1566 = x284*x450;
  auto x1567 = x44*x51;
  auto x1568 = x455*x800;
  auto x1569 = x289*x801;
  auto x1570 = x104*x800;
  auto x1571 = x804*x923;
  auto x1572 = x134*x531;
  auto x1573 = x806*x808;
  auto x1574 = x417*x810;
  auto x1575 = x211*x813;
  auto x1576 = x212*x814;
  auto x1577 = x151*x407;
  auto x1578 = x1577*x524;
  auto x1579 = x34*x818;
  auto x1580 = x302*x453;
  auto x1581 = x1398*x307;
  auto x1582 = x289*x818;
  auto x1583 = x409*x829;
  auto x1584 = x220*x834;
  auto x1585 = x135*x837;
  auto x1586 = x1485*x840;
  auto x1587 = x233*x841;
  auto x1588 = x417*x842;
  auto x1589 = x67*x850;
  auto x1590 = x426*x854;
  auto x1591 = x247*x435;
  auto x1592 = x233*x855;
  auto x1593 = x417*x859;
  auto x1594 = x639*x79*x864;
  auto x1595 = x51*x82;
  auto x1596 = x1595*x68*x868;
  auto x1597 = x1341*x871;
  auto x1598 = x211*x876;
  auto x1599 = x82*x840;
  auto x1600 = x279*x541;
  auto x1601 = x886*x945;
  auto x1602 = x1101*x1580 + x1105*x1570 + x1105*x821 + x1106*x1512 + x1106*x1517 + x1110*x1590 + x1113*x1596 - x1469*x1574 + x1475*x429 + x1475*x824 - x1481*x832 + x1494*x1599 + x1566*x547 + x1567*x547 + x1568*x552 + x1569*x557 + x1571*x539 - x1572*x1573 - x1575*x940 - x1576*x917 + x1578*x253 + x1578*x826 + x1579*x547 + x1581*x552 + x1582*x937 - x1583*x541 - x1584*x540 - x1585*x924 + x1586*x508 + x1587*x508 + x1588*x508 + x1589*x927 + x1591*x928 + x1592*x931 + x1592*x934 + x1593*x931 + x1593*x934 + x1594*x931 + x1594*x934 + x1597*x532 + x1597*x536 + x1598*x942 + x1598*x956 + x1600*x880 + x1600*x883 + x1601*x540 + x514*x845 + x532*x873 + x532*x874 + x536*x873 + x536*x874 + x851*x931 + x851*x934;
  auto x1603 = -x1564*x4 + x1565*x4 + x1602;
  auto x1604 = -x1122*x916 - x1160*x913;
  auto x1605 = x1603 + x1604;
  auto x1606 = (1.0/3.0)*x915;
  auto x1607 = x1160*x1606;
  auto x1608 = (1.0/3.0)*x911;
  auto x1609 = x1122*x1608;
  auto x1610 = x1566*x592;
  auto x1611 = x1567*x592;
  auto x1612 = x1568*x595;
  auto x1613 = x1569*x598;
  auto x1614 = x1139*x1570;
  auto x1615 = x1140*x1512;
  auto x1616 = x1571*x588;
  auto x1617 = x134*x584;
  auto x1618 = -x1573*x1617;
  auto x1619 = -x1503*x1574;
  auto x1620 = -x1575*x976;
  auto x1621 = -x1576*x960;
  auto x1622 = x1577*x580;
  auto x1623 = x1622*x253;
  auto x1624 = x1504*x429;
  auto x1625 = x1579*x592;
  auto x1626 = x1137*x1580;
  auto x1627 = x1581*x595;
  auto x1628 = x1582*x973;
  auto x1629 = x1139*x821;
  auto x1630 = x1140*x1517;
  auto x1631 = x1504*x824;
  auto x1632 = x1622*x826;
  auto x1633 = -x1583*x978;
  auto x1634 = -x1505*x832;
  auto x1635 = -x1506*x1584;
  auto x1636 = -x1585*x588*x923;
  auto x1637 = x1586*x576;
  auto x1638 = x1587*x576;
  auto x1639 = x1588*x576;
  auto x1640 = x578*x845;
  auto x1641 = x1589*x967;
  auto x1642 = x851*x969;
  auto x1643 = x851*x971;
  auto x1644 = x1144*x1590;
  auto x1645 = x1591*x968;
  auto x1646 = x1592*x969;
  auto x1647 = x1592*x971;
  auto x1648 = x1593*x969;
  auto x1649 = x1593*x971;
  auto x1650 = x1594*x969;
  auto x1651 = x1594*x971;
  auto x1652 = x1147*x1596;
  auto x1653 = x1597*x585;
  auto x1654 = x1597*x587;
  auto x1655 = x585*x873;
  auto x1656 = x587*x873;
  auto x1657 = x585*x874;
  auto x1658 = x587*x874;
  auto x1659 = x1598*x991;
  auto x1660 = x1598*x977;
  auto x1661 = x1509*x1599;
  auto x1662 = x589*x732;
  auto x1663 = x1662*x880;
  auto x1664 = x1662*x883;
  auto x1665 = x1506*x1601;
  auto x1666 = -x1607*x17 + x1609*x17 + x1610 + x1611 + x1612 + x1613 + x1614 + x1615 + x1616 + x1618 + x1619 + x1620 + x1621 + x1623 + x1624 + x1625 + x1626 + x1627 + x1628 + x1629 + x1630 + x1631 + x1632 + x1633 + x1634 + x1635 + x1636 + x1637 + x1638 + x1639 + x1640 + x1641 + x1642 + x1643 + x1644 + x1645 + x1646 + x1647 + x1648 + x1649 + x1650 + x1651 + x1652 + x1653 + x1654 + x1655 + x1656 + x1657 + x1658 + x1659 + x1660 + x1661 + x1663 + x1664 + x1665;
  auto x1667 = -x1154*x994 - x1155*x986;
  auto x1668 = x1666 + x1667;
  auto x1669 = -x1564 + x1565 + x1602;
  auto x1670 = -x1607 + x1609;
  auto x1671 = x1669 + x1670;
  auto x1672 = -x568*x913 - x568*x916 - 2*x951 + x957;
  auto x1673 = x4/x162;
  auto x1674 = std::pow(x914, 2);
  auto x1675 = (-x1674 - 1)/x1674;
  auto x1676 = x1466 + x569*x753;
  auto x1677 = x1496 + x1676;
  auto x1678 = -x1461 - 2.0/3.0*x1675*x560 + x1677 - x560*((2.0/3.0)*x1673 + (1.0/6.0)*x4) - x913*x949 - x916*x949 - x916*x950;
  auto x1679 = -x1121*x913 - x1121*x916 + x1603;
  auto x1680 = x1241*x913;
  auto x1681 = x213*x810;
  auto x1682 = x227*x265;
  auto x1683 = x79*x842;
  auto x1684 = x121*x929;
  auto x1685 = x1178*x933;
  auto x1686 = x1182*x930;
  auto x1687 = x1189*x289;
  auto x1688 = x213*x941;
  auto x1689 = x1196*x213;
  auto x1690 = x144*x275;
  auto x1691 = x144*x180;
  auto x1692 = x1691*x943;
  auto x1693 = x732*x946;
  auto x1694 = x1170*x1682 + x1170*x1683 + x1174*x1684 + x1175*x854 + x1182*x918 + x1184*x44*x798 + x1185*x936 + x1187*x1570 + x1187*x821 + x1189*x1512 + x1192*x1688 + x1193*x267 - x1196*x1681 + x1197*x267 + x1200*x1692 + x1200*x1693 - x1200*x964 + x1685*x253 + x1685*x826 + x1686*x253 + x1686*x826 + x1687*x302*x311 + x1689*x1690;
  auto x1695 = -x1203*x913 - x1203*x916 + x1694;
  auto x1696 = x1164*x755 + x1167*x363 - x1204*x916 - x1680 + x1695;
  auto x1697 = x1241*x915;
  auto x1698 = (1.0/3.0)*x1697;
  auto x1699 = x1204*x1608;
  auto x1700 = x1213*x930;
  auto x1701 = x1215*x933;
  auto x1702 = x1219*x213;
  auto x1703 = x1210*x1682 + x1210*x1683 + x1211*x1684 + x1212*x854 + x1213*x918 + x1217*x1688 + x1218*x267 - x1219*x1681 + x1220*x267 + x1221*x1692 + x1221*x1693 - x1221*x964 + x1690*x1702 + x1700*x253 + x1700*x826 + x1701*x253 + x1701*x826 + x313;
  auto x1704 = -x1698*x17 + x1699*x17 + x1703;
  auto x1705 = x1225*x888;
  auto x1706 = x1227*x755;
  auto x1707 = x1229*x363;
  auto x1708 = x1707*x4;
  auto x1709 = -x17*x1706 + x17*x1708 - x1705*x4;
  auto x1710 = -x1223*x913 - x1223*x916 + x1704 + x1709;
  auto x1711 = -x1706 + x1708;
  auto x1712 = x1695 - x1698 + x1699 + x1711;
  auto x1713 = x1606*x568;
  auto x1714 = x1608*x568;
  auto x1715 = -x17*x1713 + x17*x1714 - 2*x987 + x992;
  auto x1716 = x1606*x949;
  auto x1717 = x1606*x994;
  auto x1718 = x1608*x949;
  auto x1719 = x1608*x950;
  auto x1720 = x1673*x983;
  auto x1721 = x1675*x983;
  auto x1722 = x1501 + x607*x753;
  auto x1723 = x1510 - x17*x1716 - x17*x1717 + x17*x1718 + x17*x1719 - x17*x1720 - x17*x1721 + x1722;
  auto x1724 = x1121*x1606;
  auto x1725 = x1121*x1608;
  auto x1726 = x1610 + x1611 + x1612 + x1613 + x1614 + x1615 + x1616 + x1618 + x1619 + x1620 + x1621 + x1623 + x1624 + x1625 + x1626 + x1627 + x1628 + x1629 + x1630 + x1631 + x1632 + x1633 + x1634 + x1635 + x1636 + x1637 + x1638 + x1639 + x1640 + x1641 + x1642 + x1643 + x1644 + x1645 + x1646 + x1647 + x1648 + x1649 + x1650 + x1651 + x1652 + x1653 + x1654 + x1655 + x1656 + x1657 + x1658 + x1659 + x1660 + x1661 + x1663 + x1664 + x1665 + x1667 - x17*x1724 + x17*x1725 + x33*x984 - x33*x985;
  auto x1727 = x1203*x1606;
  auto x1728 = x1203*x1608;
  auto x1729 = -x17*x1727 + x17*x1728;
  auto x1730 = -x1232*x916 - x1252*x913;
  auto x1731 = x1703 + x1709 + x1729 + x1730;
  auto x1732 = x1223*x1606;
  auto x1733 = x1252*x1606;
  auto x1734 = x1223*x1608;
  auto x1735 = x1232*x1608;
  auto x1736 = x1245*x888 + x1694;
  auto x1737 = x1247*x363 - x17*x1732 - x17*x1733 + x17*x1734 + x17*x1735 + x1736;
  auto x1738 = -x1705;
  auto x1739 = x17*x1707 + x1703 + x1738;
  auto x1740 = -x1733 + x1735;
  auto x1741 = x1729 + x1739 + x1740;
  auto x1742 = -x1713 + x1714 + x957 - 2*x995;
  auto x1743 = x1677 - x1716 - x1717 + x1718 + x1719 - x1720 - x1721;
  auto x1744 = x1669 - x1724 + x1725;
  auto x1745 = -x1256*x913;
  auto x1746 = x1694 - x1727 + x1728;
  auto x1747 = -2.0/3.0*x1697 + x1711 + x1745 + x1746;
  auto x1748 = x1256*x1606;
  auto x1749 = x1241*x1608;
  auto x1750 = -x17*x1748 + x17*x1749;
  auto x1751 = -x1732 + x1734 + x1739 + x1750;
  auto x1752 = x1707 + x1746 - x1748 + x1749;
  auto x1753 = x58*x6;
  auto x1754 = x65*x679;
  auto x1755 = x396*x64;
  auto x1756 = x12*x475;
  auto x1757 = x242*x484;
  auto x1758 = x439*x61;
  auto x1759 = (27.0/16.0)*x1023;
  auto x1760 = x1019*x1332;
  auto x1761 = std::pow(x17, 3);
  auto x1762 = (9.0/32.0)*x1761;
  auto x1763 = x121*x77;
  auto x1764 = x1529*x228;
  auto x1765 = x413*x42;
  auto x1766 = std::pow(x33, -5.0/2.0);
  auto x1767 = x1761*x1766;
  auto x1768 = std::pow(x43, 5.0/2.0);
  auto x1769 = x1534*x423;
  auto x1770 = x1032*x1765;
  auto x1771 = x1033*x1763;
  auto x1772 = x1023*x1332;
  auto x1773 = x1772*x288;
  auto x1774 = x1322*x9;
  auto x1775 = x1767*x80;
  auto x1776 = x1324*x9;
  auto x1777 = x1429*x68;
  auto x1778 = x348*x807;
  auto x1779 = x1047*x30;
  auto x1780 = (27.0/16.0)*x1030;
  auto x1781 = x1372*x80;
  auto x1782 = x1045*x412;
  auto x1783 = x1546*x1763;
  auto x1784 = x1033*x1782;
  auto x1785 = x1762*x1766;
  auto x1786 = x1785*x9;
  auto x1787 = x1023*x436;
  auto x1788 = x1519*x348;
  auto x1789 = x1045*x415*(-x424 - 3.0/4.0)/x1768;
  auto x1790 = x1068*x1363;
  auto x1791 = x1546*x1782;
  auto x1792 = x1789*x249;
  auto x1793 = x443*x492;
  auto x1794 = (9.0/32.0)*x1023;
  auto x1795 = x119*x434;
  auto x1796 = x1047*x436*x61;
  auto x1797 = x1789*x22;
  auto x1798 = x1047*x348*x814;
  auto x1799 = x1155*x1160;
  auto x1800 = x1153*x1156;
  auto x1801 = x204*x450;
  auto x1802 = x1006*x662;
  auto x1803 = x457*x662;
  auto x1804 = x1009*x173;
  auto x1805 = x1011*x462;
  auto x1806 = x1572*x86;
  auto x1807 = x1015*x348;
  auto x1808 = x1515*x79;
  auto x1809 = x1027*x79;
  auto x1810 = x1023*x1471;
  auto x1811 = x1033*x83;
  auto x1812 = x1038*x83;
  auto x1813 = x1040*x409;
  auto x1814 = x1018*x445*x679;
  auto x1815 = x1047*x1485;
  auto x1816 = x1543*x417;
  auto x1817 = x1050*x243;
  auto x1818 = x119*x1550*x426;
  auto x1819 = x1027*x417;
  auto x1820 = x1019*x945;
  auto x1821 = x1063*x1341;
  auto x1822 = x1066*x417;
  auto x1823 = x1047*x82;
  auto x1824 = x1432*x417*x422;
  auto x1825 = -x1014*x1806 + x1024*x1578 + x1032*x564 + x1032*x565 + x1052*x532 + x1052*x536 + x1056*x931 + x1056*x934 + x1068*x1465 + x1101*x1801 + x1101*x1810 + x1105*x1802 + x1106*x1803 + x1110*x1817 + x1113*x1533 - x1490*x1820 + x1494*x1823 - x1527*x927 + x1529*x509 + x1534*x516 - x1538*x956 + x1578*x1809 + x1804*x524 + x1805*x556 - x1806*x1807 - x1808*x931 - x1808*x934 + x1811*x931 + x1811*x934 - x1812*x541 - x1813*x541 - x1814*x917 + x1815*x508 + x1816*x508 + x1818*x514 + x1819*x931 + x1819*x934 + x1821*x532 + x1821*x536 + x1822*x532 + x1822*x536 + x1824*x541 - x553;
  auto x1826 = x1467 + x1825;
  auto x1827 = x1154*x1160;
  auto x1828 = (4.0/3.0)*x1092;
  auto x1829 = x1617*x86;
  auto x1830 = -x1014*x1829 + x1024*x1622 + x1032*x603 + x1032*x604 + x1052*x585 + x1052*x587 + x1056*x969 + x1056*x971 + x1068*x1508 + x1137*x1801 + x1137*x1810 + x1139*x1802 + x1140*x1803 + x1144*x1817 + x1147*x1533 - x1507*x1820 + x1509*x1823 - x1527*x967 + x1529*x577 + x1534*x579 - x1538*x991 + x1622*x1809 + x1804*x580 + x1805*x597 - x1807*x1829 - x1808*x969 - x1808*x971 + x1811*x969 + x1811*x971 - x1812*x978 - x1813*x978 - x1814*x960 + x1815*x576 + x1816*x576 + x1818*x578 + x1819*x969 + x1819*x971 + x1821*x585 + x1821*x587 + x1822*x585 + x1822*x587 + x1824*x978 - x596;
  auto x1831 = x1563*x568;
  auto x1832 = x1095*x606;
  auto x1833 = -2*x1123 + x1133 - x1831*x4 + x1832*x4;
  auto x1834 = x1563*x949;
  auto x1835 = x1095*x982;
  auto x1836 = x1093*x32 - x1096*x32 + x1602 + x1604 - x1834*x4 + x1835*x4;
  auto x1837 = x1121*x1563;
  auto x1838 = x1160*x1563;
  auto x1839 = x1095*x1152;
  auto x1840 = x1095*x1156;
  auto x1841 = x17/x147;
  auto x1842 = (1.0/3.0)*x1841*x601;
  auto x1843 = std::pow(x1091, 2);
  auto x1844 = (-x1843 - 1)/x1843;
  auto x1845 = x1844*x983;
  auto x1846 = x1676 + x1825;
  auto x1847 = -x1837*x4 - x1838*x4 + x1839*x4 + x1840*x4 - x1842*x4 - x1845*x4 + x1846;
  auto x1848 = x1241*x1563;
  auto x1849 = x1095*x1232;
  auto x1850 = x1097*x213;
  auto x1851 = x227*x439;
  auto x1852 = x79*x841;
  auto x1853 = x120*x427;
  auto x1854 = x119*x121*x435;
  auto x1855 = x135*x213*x872;
  auto x1856 = x1117*x1691;
  auto x1857 = x1119*x732;
  auto x1858 = x1098*x1178 + x1100*x1185 + x1102*x1184*x12 + x1103*x1187 + x1116*x1689 - x1141*x1200 + x1170*x1851 + x1170*x1852 + x1174*x1853 + x1174*x1854 + x1186*x17*x459 + x1188*x462*x465 - x1192*x1850 + x1192*x1855 + x1193*x441 + x1197*x441 + x1200*x1856 + x1200*x1857 + x1685*x429 + x1685*x824 + x1686*x429 + x1686*x824 + x1687*x457;
  auto x1859 = x1164*x888 + x1858;
  auto x1860 = x1203*x1563;
  auto x1861 = x1095*x1223;
  auto x1862 = -x1860*x4 + x1861*x4;
  auto x1863 = x1167*x497 - x1848*x4 + x1849*x4 + x1859 + x1862;
  auto x1864 = x1223*x1563;
  auto x1865 = x1095*x1203;
  auto x1866 = x1098*x1215 + x1116*x1702 - x1141*x1221 + x1210*x1851 + x1210*x1852 + x1211*x1853 + x1211*x1854 - x1217*x1850 + x1217*x1855 + x1218*x441 + x1220*x441 + x1221*x1856 + x1221*x1857 + x1700*x429 + x1700*x824 + x1701*x429 + x1701*x824 + x468;
  auto x1867 = -x1154*x1241 - x1155*x1232 + x1866;
  auto x1868 = x1227*x888;
  auto x1869 = x1075*x1225;
  auto x1870 = x1229*x497;
  auto x1871 = x1870*x4;
  auto x1872 = -x17*x1868 + x17*x1871 - x1869*x4;
  auto x1873 = -x1864*x4 + x1865*x4 + x1867 + x1872;
  auto x1874 = -x1868;
  auto x1875 = x1871 + x1874;
  auto x1876 = -x1848 + x1849 + x1858;
  auto x1877 = x1862 + x1875 + x1876;
  auto x1878 = -x1154*x568 - x1155*x606 - 2*x1157 + x1158;
  auto x1879 = -x1154*x949 - x1155*x982 + x1666;
  auto x1880 = -x1121*x1154 - x1152*x1155 - x1155*x1156 + x1722 - x1827 + x1830 - 2.0/3.0*x1844*x601 - x560*((1.0/6.0)*x17 + (2.0/3.0)*x1841);
  auto x1881 = -x1154*x1203 - x1155*x1223;
  auto x1882 = x1092*x1252;
  auto x1883 = (1.0/3.0)*x1882;
  auto x1884 = x1095*x1248;
  auto x1885 = -x1883*x4 + x1884*x4;
  auto x1886 = x1866 + x1872 + x1881 + x1885;
  auto x1887 = x1154*x1252;
  auto x1888 = x1075*x1245 - x1154*x1223 - x1155*x1203 - x1155*x1248 + x1247*x497 + x1858 - x1887;
  auto x1889 = x1866 + x1884;
  auto x1890 = x17*x1870 - x1869;
  auto x1891 = x1881 - x1883 + x1889 + x1890;
  auto x1892 = x1133 - 2*x1161 - x1831 + x1832;
  auto x1893 = x1602 + x1670 - x1834 + x1835;
  auto x1894 = -x1837 - x1838 + x1839 + x1840 - x1842 - x1845 + x1846;
  auto x1895 = x1858 - x1860 + x1861;
  auto x1896 = x1256*x1563;
  auto x1897 = x1095*x1252;
  auto x1898 = -x1896*x4 + x1897*x4;
  auto x1899 = x1875 + x1895 + x1898;
  auto x1900 = -x1154*x1256;
  auto x1901 = -x1864 + x1865 + x1866 - 2.0/3.0*x1882 + x1890 + x1900;
  auto x1902 = x1870 + x1895 - x1896 + x1897;
  auto x1903 = (3.0/8.0)*x95;
  auto x1904 = x3*x5;
  auto x1905 = x10*x58;
  auto x1906 = x167*x27;
  auto x1907 = x288*x679;
  auto x1908 = x115*x1907;
  auto x1909 = x27*x284;
  auto x1910 = x1909*x29;
  auto x1911 = x27*x288;
  auto x1912 = x1911*x292;
  auto x1913 = x226*x655;
  auto x1914 = x226*x84;
  auto x1915 = (1.0/16.0)*x1914;
  auto x1916 = x22*x633;
  auto x1917 = x1329*x46;
  auto x1918 = x130*x242;
  auto x1919 = x288*x9;
  auto x1920 = (3.0/32.0)*x1919;
  auto x1921 = (3.0/32.0)*x779;
  auto x1922 = x1537*x279;
  auto x1923 = x27*x688;
  auto x1924 = x12*x304;
  auto x1925 = x1907*x705;
  auto x1926 = (1.0/4.0)*x226;
  auto x1927 = x228*x688;
  auto x1928 = x1926*x259;
  auto x1929 = (1.0/8.0)*x68;
  auto x1930 = x242*x693;
  auto x1931 = x779*x875;
  auto x1932 = x359*x683;
  auto x1933 = x139*x211;
  auto x1934 = (1.0/32.0)*x1933;
  auto x1935 = x191*x676;
  auto x1936 = x688*x714;
  auto x1937 = (1.0/8.0)*x9;
  auto x1938 = x688*x717;
  auto x1939 = (1.0/8.0)*x239;
  auto x1940 = x1939*x767;
  auto x1941 = (1.0/32.0)*x1372;
  auto x1942 = x190*x68;
  auto x1943 = (1.0/32.0)*x1942;
  auto x1944 = x1363*x688;
  auto x1945 = x186*x1929;
  auto x1946 = (1.0/8.0)*x1914;
  auto x1947 = x12*x747;
  auto x1948 = x1947*x679;
  auto x1949 = x637*x707;
  auto x1950 = x157*x679;
  auto x1951 = x168*x679;
  auto x1952 = (1.0/16.0)*x1933;
  auto x1953 = x137*x1952;
  auto x1954 = x146*x1952;
  auto x1955 = (1.0/16.0)*x68;
  auto x1956 = x190*x1955;
  auto x1957 = x1946 + x1948 + x1949 + x1950 + x1951 + x1953 + x1954 + x1956 + x27*x52;
  auto x1958 = x203*x49;
  auto x1959 = x19*x206;
  auto x1960 = x1924*x302;
  auto x1961 = x1404*x255;
  auto x1962 = x226*x337;
  auto x1963 = x226*x338;
  auto x1964 = x351*x713;
  auto x1965 = x211*x354;
  auto x1966 = (1.0/16.0)*x239;
  auto x1967 = x259*x885;
  auto x1968 = x1229*x569;
  auto x1969 = (1.0/8.0)*x73;
  auto x1970 = p[15]*x1969;
  auto x1971 = (1.0/8.0)*x71;
  auto x1972 = p[25]*x1971;
  auto x1973 = (27.0/8.0)*x510;
  auto x1974 = (27.0/8.0)*x512;
  auto x1975 = x243*x515;
  auto x1976 = p[21]*x1969;
  auto x1977 = p[31]*x1971;
  auto x1978 = p[17]*x1969;
  auto x1979 = p[27]*x1971;
  auto x1980 = p[16]*x1969;
  auto x1981 = p[26]*x1971;
  auto x1982 = x136*x528;
  auto x1983 = p[18]*x1969;
  auto x1984 = p[28]*x1971;
  auto x1985 = x145*x528;
  auto x1986 = p[19]*x1969;
  auto x1987 = p[29]*x1971;
  auto x1988 = x1171*(x1970 + x1972) + x1201*(x1986 + x1987) + x1975*(x1973 + x1974) + x1982*(x1980 + x1981) + x1985*(x1983 + x1984) + x520*(-x1976 - x1977) + x525*(x1978 + x1979) + x600;
  auto x1989 = x1164*x949 + x1167*x568 + x1988;
  auto x1990 = (2.0/3.0)*x32;
  auto x1991 = x1990*x950;
  auto x1992 = (2.0/3.0)*x284;
  auto x1993 = f[0]*x569;
  auto x1994 = (2.0/9.0)*x1993;
  auto x1995 = x1994*x4;
  auto x1996 = x1171*(-x1970 - x1972) + x1201*(-x1986 - x1987) + x1975*(-x1973 - x1974) + x1982*(-x1980 - x1981) + x1985*(-x1983 - x1984) + x520*(x1976 + x1977) + x525*(-x1978 - x1979) + x559;
  auto x1997 = (2.0/27.0)*x315;
  auto x1998 = (3.0/4.0)*x737;
  auto x1999 = (1.0/2.0)*x316;
  auto x2000 = x1999*x738;
  auto x2001 = x1999*x613;
  auto x2002 = (1.0/24.0)*x1267;
  auto x2003 = x1269*x2002;
  auto x2004 = x2002*x24;
  auto x2005 = (5.0/8.0)*x768;
  auto x2006 = x106*x2005;
  auto x2007 = x115*x2005;
  auto x2008 = x1903*x747;
  auto x2009 = x1271*x27;
  auto x2010 = (1.0/4.0)*x1270;
  auto x2011 = x1274*x760;
  auto x2012 = (1.0/8.0)*x1262;
  auto x2013 = x1753*x2012;
  auto x2014 = x2012*x65;
  auto x2015 = (7.0/24.0)*x761;
  auto x2016 = x137*x2015;
  auto x2017 = x146*x2015;
  auto x2018 = (1.0/4.0)*x9;
  auto x2019 = x2018*x361;
  auto x2020 = x157*x2019;
  auto x2021 = x168*x2019;
  auto x2022 = (1.0/12.0)*x1942*x360;
  auto x2023 = -x1997 - x1998 - x2000 - x2001 - x2003 - x2004 - x2006 - x2007 - x2008 - x2009 - x2010 - x2011 - x2013 - x2014 - x2016 - x2017 - x2020 - x2021 - x2022;
  auto x2024 = x2023*x4;
  auto x2025 = x1225*x496;
  auto x2026 = x1227*x362;
  auto x2027 = -2*x1233 + x1239 - x17*x2024 - x17*x2026 - x2025*x4;
  auto x2028 = (3.0/4.0)*x95;
  auto x2029 = x22*x50;
  auto x2030 = x203*x27;
  auto x2031 = x226*x481;
  auto x2032 = x242*x485;
  auto x2033 = x27*x436;
  auto x2034 = x489*x713;
  auto x2035 = x211*x490;
  auto x2036 = x436*x885;
  auto x2037 = x1274*x1419 + x1274*x1452 + x1274*x1757 - x1387*x22 - x1429*x191 + (1.0/8.0)*x1441 + x156*x440 - x1755*x87 + x1756*x27 + (1.0/8.0)*x1793 + x1911*x477 + x1911*x478 + x1911*x479 + x1911*x480 + x1929*x2036 - x2028*x394 - x2029*x284 + x2030*x285 + (1.0/2.0)*x2031 + x2032*x279 + x2033*x644 + x2033*x648 + (1.0/4.0)*x2034 + (1.0/4.0)*x2035 - x22*x397 + x252*x440 - x28*x400 + x527*x815;
  auto x2038 = x1274*x1289 + x1274*x1560 + x1292*x1911 + x1293*x22 + x1294*x22 + x1299*x22 + x1349*x1939 + x1350*x1939 - x1356*x191 - x1513*x22 + x1535*x1911 + x1910*x285 + x1911*x294 + x1911*x333 + x1929*x1967 - x1958*x22 - x1959*x27 - x196*x2028 + x1960*x279 + x1961*x279 + (1.0/2.0)*x1962 + (1.0/4.0)*x1963 + (1.0/4.0)*x1964 + (1.0/4.0)*x1965 - x199*x88 - x200*x22 + x272*x644 + x272*x648;
  auto x2039 = x2038*x4;
  auto x2040 = x1924*x279;
  auto x2041 = x1911*x818;
  auto x2042 = (1.0/2.0)*x226;
  auto x2043 = x2042*x228;
  auto x2044 = x1071*x191;
  auto x2045 = x1274*x242;
  auto x2046 = x279*x434;
  auto x2047 = x2018*x840;
  auto x2048 = (1.0/8.0)*x348;
  auto x2049 = x2048*x233*x492;
  auto x2050 = x1939*x318;
  auto x2051 = (1.0/16.0)*x908;
  auto x2052 = x1274*x1363;
  auto x2053 = x1945*x436;
  auto x2054 = x1955*x885;
  auto x2055 = x1005*x1910 + x1026*x272 + x1048*x1274*x689 - x1065*x809 + x1304*x871 + x1307*x871 + x1346*x2051 + x137*x2049 + x146*x2049 + x1558*x2050 + x1559*x2050 + x1595*x241*x432*x69 + x1911*x302*x822 + x1911*x664*x894 + x1911*x803 + x1911*x891 + x1912*x456 + x1912*x802 - x1916*x417 + x1922*x484 + x1928*x843 - x1935*x417 + x1945*x259*x417 + x199*x400*x87 + x2029*x34 + x2030*x819 + x2033*x250 + x2033*x667 + x2033*x701 + x2040*x818 + x2041*x344 + x2041*x346 + x2043*x840 - x2044*x808 + x2045*x844*x900 + x2046*x242*x694 + x2047*x714 + x2047*x717 + x2051*x875 + x2052*x840 + x2053*x233 + x2054*x864 + x206*x396*x87 - x215*x442 + x218*x440 + x223*x404 + (1.0/8.0)*x226*x235*x864 + x266*x815 - x27*x271*x812 + x272*x858 + x272*x861 - x279*x421*x836 + x279*x799 - x281*x812 + x644*x876 + x648*x876;
  auto x2056 = (3.0/2.0)*x1933;
  auto x2057 = x106*x1907;
  auto x2058 = x1336*x679;
  auto x2059 = (3.0/2.0)*x9;
  auto x2060 = x22*x288;
  auto x2061 = x1911*x705;
  auto x2062 = (1.0/4.0)*x790;
  auto x2063 = x1274*x186;
  auto x2064 = (1.0/8.0)*x1933;
  auto x2065 = -x137*x2064 - x146*x2064 - x157*x27 - x163*x1906 - x190*x1929 - 1.0/4.0*x1914 - x1947*x27 - x22*x52 - x279*x637;
  auto x2066 = x32*(-x115*x1911 + x1274*x1930 + x1274*x1944 + x1304*x715 + x1307*x715 - x1326*x2056 + x1537*x191*x248 + x162*x88 + x167*x22*x623 - x187*x189*x4 - x187*x233*x676 - x1904*x22 - x1908*x634 + x1911*x626 - 1.0/8.0*x1913 + x1927*x2042 - 1.0/16.0*x1931 - 1.0/16.0*x1932 + x1936*x2018 + x1938*x2018 - x1946*x634 - x1948*x634 - x1949*x634 - x1950*x634 - x1951*x634 - x1953*x634 - x1954*x634 - x1955*x280*x709 - x1956*x634 - x2028*x613 + x2040*x705 + x2042*x259*x689 - x2057*x634 - x2058*x644 - x2058*x648 + x2059*x218*x265 + x2060*x666 + x2060*x777 + x2061*x344 + x2061*x346 + x2062*x713 + x2062*x716 + x2063*x722 + x2065 + x22*x616 + x22*x659*x660 + x250*x718 + x255*x670*x707 - x27*x65 - x58*x614 - 3.0/2.0*x632*x767 + x667*x718 + x701*x718);
  auto x2067 = x1229*x362;
  auto x2068 = x2067*x4;
  auto x2069 = -x1230*x202 - x17*x2039 - x17*x2066 + x17*x2068 + x1704 + x1730 + x2037*x34 - x2055*x284;
  auto x2070 = x17*x2037;
  auto x2071 = x16*x18;
  auto x2072 = x147*x64;
  auto x2073 = x1012*x114;
  auto x2074 = x1019*x679;
  auto x2075 = x1018*x419;
  auto x2076 = x22*x436;
  auto x2077 = x1036*x17;
  auto x2078 = x1082*x443;
  auto x2079 = x1043*x909;
  auto x2080 = x1047*x2018;
  auto x2081 = (1.0/4.0)*x348;
  auto x2082 = x33*(x1000*x22 + x1005*x203*x22 + x1007*x2060 + x1008*x2060 - x1015*x1071*x187 - x1019*x2054 + x1023*x1908 + x1023*x1946 + x1023*x1948 + x1023*x1949 + x1023*x1950 + x1023*x1951 + x1023*x1953 + x1023*x1954 + x1023*x1956 + x1023*x2057 + x1026*x2076 + x1031*x242*x707 + x1047*x2043 + x1047*x2052 + (1.0/2.0)*x1049*x68 + x1051*x2045 - x106*x1911 + x1063*x1304 + x1063*x1307 - 3.0/2.0*x1079*x1778 + x1086*x2081 + x1088*x2081 + x1446*x1795 + x1516*x527 - x1520*x2056 - x187*x2077 + x1911*x2073 - x1929*x2075 - x2028*x738 + x2059*x439*x815 + x2063*x417*x436 + x2065 - x2071*x22 + x2072*x87 - x2074*x644 - x2074*x648 + x2076*x858 + x2076*x861 - 1.0/16.0*x2078 - 1.0/16.0*x2079 + x2080*x714 + x2080*x717 - x28*x58 - x64*x998);
  auto x2083 = x1229*x496;
  auto x2084 = x2083*x4;
  auto x2085 = -x1230*x284 + x17*x2084 + x1867 + x1885 - x202*x2055 + x2038*x34 - x2070*x4 - x2082*x4;
  auto x2086 = x17*x1968;
  auto x2087 = x2086*x4;
  auto x2088 = x1227*x950;
  auto x2089 = x1122*x1225;
  auto x2090 = x1121*x1225;
  auto x2091 = x1227*x949;
  auto x2092 = x1229*x568;
  auto x2093 = x2092*x4;
  auto x2094 = -x17*x2091 + x17*x2093 - x2090*x4;
  auto x2095 = x1164*x986 + x1167*x607 - x17*x2088 + x1996 + x2087 - x2089*x4 + x2094;
  auto x2096 = x1152*x1225;
  auto x2097 = x1227*x982;
  auto x2098 = x1156*x1225;
  auto x2099 = x1227*x986;
  auto x2100 = x1229*x606;
  auto x2101 = x2100*x4;
  auto x2102 = x1229*x607;
  auto x2103 = x2102*x4;
  auto x2104 = (1.0/18.0)*x1993;
  auto x2105 = x1246*x2104 + x1988;
  auto x2106 = x1122*x1245 - x17*x2097 - x17*x2099 + x17*x2101 + x17*x2103 - x2096*x4 - x2098*x4 + x2105;
  auto x2107 = x1996 + x2086;
  auto x2108 = -x2089 + x2107;
  auto x2109 = -x2099 + x2103;
  auto x2110 = x2094 + x2108 + x2109;
  auto x2111 = x1207 + x1237 - 2*x1242 - x2024 - x2026;
  auto x2112 = -x1230*x32 + x1694 - x1697 + x1699 + x1745 - x2039 - x2066 + x2068;
  auto x2113 = x1874 + x1876 + x1898 + x2084;
  auto x2114 = x1968*x4 + x1988 - x2091 + x2093;
  auto x2115 = x1164*x994 + x1165*x2104 - x2088 + x2114;
  auto x2116 = x1227*x994;
  auto x2117 = x1160*x1225;
  auto x2118 = -x17*x2116 + x2087 - x2117*x4;
  auto x2119 = -x2097 + x2101 + x2108 + x2118;
  auto x2120 = x1968 + x2114 - x2116;
  auto x2121 = x10*x64;
  auto x2122 = x1548*x9;
  auto x2123 = (3.0/32.0)*x1019;
  auto x2124 = x1047*x27;
  auto x2125 = x1023*x1934;
  auto x2126 = x1047*x1937;
  auto x2127 = x436*x679;
  auto x2128 = (2.0/9.0)*f[0]*x17*x607;
  auto x2129 = x1121*x1245 + x1247*x568 + x1988;
  auto x2130 = (2.0/3.0)*x33;
  auto x2131 = -2*x1253 + x1254 - x17*x2023 - x2025;
  auto x2132 = x17*x2067 + x1703 + x1738 + x1740 + x1750;
  auto x2133 = -x1230*x33 + x17*x2083 - x1882 + x1889 + x1900 - x2070 - x2082;
  auto x2134 = x17*x2092 - x2090;
  auto x2135 = x1996 + x2109 + x2118 + x2134;
  auto x2136 = x1160*x1245 + x17*x2100 + x17*x2102 - x2096 - x2098 + x2105;
  auto x2137 = x2102 + x2107 - x2117 + x2134;
  auto x2138 = x1988 + x2092;

 sum[0]=x106*x96 - x11*x15*x3 + x115*x96 + (945.0/32.0)*x117*x130 - x13*x172*x179*x186*x29 + x13*std::pow(x178, 3)*x194 + x13*x178*x187*x190 + x13*std::pow(x47, 3)*x90 + x137*x140 + x140*x146 - x15*x16*x20 - x158*x160 + x158*x170 - x160*x169 + x169*x170 + x171*x175 + x171*x177 + x21*x23*x6 + x21*x26*x28 + x23*x25 + x25*x26*x27 - x30*x48*x53 + x31*x46 + x47*x53*x86 + x55*x59*x88 + x55*x66*x87 - x58*x59*x62 - x62*x66 + x91*x92 + x92*x93 - x85/x67 + (405.0/2.0)*x0/std::pow(f[0], 7);

 sum[36]=x612;

 sum[72]=x997;

 sum[108]=x1163;

 sum[144]=x1244;

 sum[180]=x1163;

 sum[6]=x612;

 sum[42]=x106*x1266 - x115*x1261 - x1259*x613 + x1260*x738 - x1263*x65 + x1265*x334 + x1275 - 2*x756 + x791;

 sum[78]=x910;

 sum[114]=x1672;

 sum[150]=x1715;

 sum[186]=x1742;

 sum[12]=x997;

 sum[48]=x910;

 sum[84]=-x106*x1261 - 2*x1076 + x1089 + x115*x1266 - x1259*x738 + x1260*x613 - x1263*x1753 + x1275 + x1754*x334;

 sum[120]=x1833;

 sum[156]=x1878;

 sum[192]=x1892;

 sum[18]=x1163;

 sum[54]=x1672;

 sum[90]=x1833;

 sum[126]=x1164*x362 - 2*x1205 + x1206 + x1207 - x752*(-1.0/18.0*x162 - 1.0/9.0);

 sum[162]=x2027;

 sum[198]=x2111;

 sum[24]=x1244;

 sum[60]=x1715;

 sum[96]=x1878;

 sum[132]=x2027;

 sum[168]=x1207 + x1245*x496 - 2*x1249 + x1250 - x752*(-1.0/18.0*x147 - 1.0/9.0);

 sum[204]=x2131;

 sum[30]=x1163;

 sum[66]=x1742;

 sum[102]=x1892;

 sum[138]=x2111;

 sum[174]=x2131;

 sum[210]=x1207 + x1236 - 2*x1257 + x1997 + x1998 + x2000 + x2001 + x2003 + x2004 + x2006 + x2007 + x2008 + x2009 + x2010 + x2011 + x2013 + x2014 + x2016 + x2017 + x2020 + x2021 + x2022;

 sum[1]=-2*x364 + x393;

 sum[37]=x792;

 sum[73]=x910;

 sum[109]=x959;

 sum[145]=x993;

 sum[181]=x996;

 sum[7]=x792;

 sum[43]=-x12*x377*x61 + x1276*x363 + x1277*x200 + x1278*x199*x58 - x1279*x218 - x1282*x1338 - x1282 - x1284*x1338 - x1284 - x1285*x1338 - x1285 + x1286*x1295 + (45.0/8.0)*x1286 - 81.0/32.0*x1288*x634 - 45.0/16.0*x1288 - x1289*x1290 - x1289*x187*x634 - x1291*x1292 + x1291*x1354*x1355 + x1291*x292*x706 + x1291*x309*x625 - x1293*x61 - x1294*x61 - x1295*x1299*x9 + x1296*x1356 - x1296*x286 - x1297*x329 - x1297*x333*x9 - x1298*x250 - x1298*x667 + x1300*x1368*x668 - x1301*x337 - x1303*x245*x691 - x1303*x77 - x1304*x1306 - x1304*x1340 - x1305*x1312 - x1305*x1364 - x1306*x1307 - x1307*x1340 - x1308*x1310*x642 - x1312*x1339 + x1313 + x1315*x1316*x236 - x1316*x338*x634 + x1317 - 27.0/32.0*x1318*x1334 + x1319 + x1320*x1321*x259 + x1320*x265*x30 + x1322*x1323 - x1322*x1335 + x1323*x1324 + (45.0/8.0)*x1325*x674 - x1326*x1327*x351 + x1328*x1351 - x1328*x633 - 27.0/16.0*x1329*x1330*x304 - 27.0/16.0*x1331*x221*x674 + x1331*x248*x868 - x1333*x344 - x1333*x346 - 9.0/32.0*x1335*x875 - x1336*x256*x67*x689 - x1337*x713 - x1337*x716 - x1339*x1364 - x1343*x685 - x1343*x687 + x1345 + x1347 + x1348*x1349 + x1348*x1350 + x1348*x1372*x674 - x1350*x1362*x634 + x1352*x259*x30 + x1353*x327*x61 - x1357*x1358*x1359 - x1359*x1360 + x1360*x1381*x259 - x1361*x713 - x1361*x716 - x1365*x685 - x1365*x687 + x1366*x229 + x1366*x720 + x1367 + x1369*x156 + x1369*x252 + x1370*x1371 + x1370*x305 + x1370*x312 + x1373*x1374 + x1374*x1375 - x1376*x185*x233*x674 - 9.0/32.0*x1378*x634 + x1379*x714 + x1379*x717 + x1380*x713 + x1380*x716 + x1383 + x176*(-40*x199 + x216) + x198 + x207 - x234*x634 + x243*x244*x246*x691*(-7.0/4.0*x230 - 7.0/4.0)/std::pow(x41, 9.0/2.0) - x251*x634 - 27.0/16.0*x252*x643*x767 - x254*x634 - x268*x634 - x269*x634 - x278*x634 + x289*x293*(8*x290 - x4) - x298 - x31*x676*x688 - 27.0/16.0*x319*x778 + x409*x61*x693*x695;

 sum[79]=x1511;

 sum[115]=x1678;

 sum[151]=x1723;

 sum[187]=x1743;

 sum[13]=x910;

 sum[49]=x1511;

 sum[85]=x1383 + x1561;

 sum[121]=x1836;

 sum[157]=x1879;

 sum[193]=x1893;

 sum[19]=x959;

 sum[55]=x1678;

 sum[91]=x1836;

 sum[127]=-x102*(x115*x1439*x1919 - x1304*x1923 - x1307*x1923 - 3.0/32.0*x1308*x670 + x1326*x528 + x1358*x192 + x1439*x1917 + x1439*x1918 + x1440*x157 + x1440*x168 - x162*x1905 + x1754 + x1903*x613 + x1904*x27 + x1905*x5 - x1906*x623 - x1907*x626 + x1908 - x1910*x819 - x1911*x666 - x1912*x309 + (1.0/16.0)*x1913 + x1915*x634 + x1916*x233 + x1920*x770 + x1921*x644 + x1921*x648 - x1922*x248 - x1924*x705*x707 - x1925*x344 - x1925*x346 - x1926*x1927 - x1928*x689 - x1929*x1930 - x1929*x1944 + (1.0/32.0)*x1931 + (1.0/32.0)*x1932 + x1934*x685 + x1934*x687 + x1935*x233 - x1936*x1937 - x1937*x1938 - x1940*x713 - x1940*x716 + x1941*x709 + x1943*x634 - x1945*x722 + x1957 - x218*x266 - x250*x272 - x27*x616 - x272*x667 - x272*x701) + x1167*x362 - x1204*x1462 + x1230*x199 - 2*x1680 + x1694 - x291*(-x1289*x1929 - x1292*x1907 - x1293*x27 - x1294*x27 - x1299*x27 - x1344*x644 - x1344*x648 - x1349*x1966 - x1350*x1966 + x1356*x279 + x1513*x27 - x1535*x1907 - x1560*x1929 + x1903*x196 + x1905*x199 - x1907*x294 - x1907*x333 - x1955*x1967 + x1958*x27 + x1959*x679 - x1960*x707 - x1961*x707 - 1.0/4.0*x1962 - 1.0/8.0*x1963 - 1.0/8.0*x1964 - 1.0/8.0*x1965 + x200*x27 - x286*x707);

 sum[163]=x2069;

 sum[199]=x2112;

 sum[25]=x993;

 sum[61]=x1723;

 sum[97]=x1879;

 sum[133]=x2069;

 sum[169]=x1232*x17*x912 + x1247*x362 - x1252*x17*x916 + x1736;

 sum[205]=x2132;

 sum[31]=x996;

 sum[67]=x1743;

 sum[103]=x1893;

 sum[139]=x2112;

 sum[175]=x2132;

 sum[211]=x1241*x912 - x1256*x916 + x1694 + x2067;

 sum[2]=-2*x498 + x503;

 sum[38]=x910;

 sum[74]=x1090;

 sum[110]=x1135;

 sum[146]=x1159;

 sum[182]=x1162;

 sum[8]=x910;

 sum[44]=x1385 + x1460;

 sum[80]=x1562;

 sum[116]=x1679;

 sum[152]=x1726;

 sum[188]=x1744;

 sum[14]=x1090;

 sum[50]=x1562;

 sum[86]=x1012*x1291*x457 - x1017*x1762*x242*x869 + (81.0/32.0)*x1023*x1388 + x1023*x1390 + x1023*x428 - x1026*x1760 - x1030*x1332*x405 + x1032*x477 + x1032*x478 - x1047*x1071*x804 + x1047*x186*x483 + x1048*x1544*x29*x87 + x1054*x1780*x68 - x1064*x1788 - x1067*x1788 + x109*x462*(-x17 - 8*x463) - x118*x1778*x1779 + x1276*x497 + x1277*x397 + x1278*x1755 - x1279*x815 + x1290*x1545*x1795*x242 - x1290*x1757 - x1291*x477 - x1301*x481 + x1304*x1771 + x1304*x1784 + x1307*x1771 + x1307*x1784 + x1321*x1516*x436 - x1327*x1520*x489 + x135*x1781*x1785 - x1357*x17*x185*x439 - x1360*x1430 + x137*x1798 + (9.0/32.0)*x1377*x1787 + x1385 - 45.0/16.0*x1388 - x1389*x713 - x1389*x716 + x139*x1759*x815 + x1391*x1772 + x1393 + x1394 + x1395 - x1403*x1759 + (45.0/8.0)*x1403 + x1419*x1518 + x1420 + x1421 + x1435 + x1441*x1794 + x146*x1798 + x1516*x30*x439 - x1526*x256*x843 + x1530*x1779 + x1531*x30*x436 + x1532*x1765 + x1541*x243*x423*x425 - x1554*x417*x69 - x156*x1758 + x156*x1792 + x156*x1796 + x174*(40*x396 + x406) - x1756*x61 - x1758*x252 - x1759*x1777 - x1760*x858 - x1760*x861 + x1763*x1764 + x1763*x1790 + x1764*x1782 + x1767*x419*x69 + x1768*x1769 + x1769*x415*x78 + x1770*x344 + x1770*x346 + x1773*x479 + x1773*x480 + x1774*x1775 + x1774*x1787 + x1775*x1776 + x1776*x1787 + (45.0/8.0)*x1777 - x1780*x1781 + x1782*x1790 + x1783*x714 + x1783*x717 + x1786*x274*x348 + x1786*x443 + x1789*x229 + x1789*x720 + x1791*x714 + x1791*x717 + x1792*x252 + x1793*x1794 + x1796*x252 + x1797*x714 + x1797*x717 + x395 + x401 - x461;

 sum[122]=x1847;

 sum[158]=x1880;

 sum[194]=x1894;

 sum[20]=x1135;

 sum[56]=x1679;

 sum[92]=x1847;

 sum[128]=x1153*x1232*x4 - x1155*x1241*x4 + x1167*x496 + x1859;

 sum[164]=x2085;

 sum[200]=x2113;

 sum[26]=x1159;

 sum[62]=x1726;

 sum[98]=x1880;

 sum[134]=x2085;

 sum[170]=-x111*(-x10*x2072 - x1000*x27 - x1005*x2030 - x1007*x1911 - x1008*x1911 + x1015*x2044 + x1019*x135*x1941 - x1023*x115*x1920 - x1023*x1915 - x1023*x1943 - x1026*x2033 - x1047*x1363*x1929 - x1047*x1926*x228 - x1049*x1274 - x1051*x1929*x242 - x1054*x2046 - x1080*x1920 - 3.0/32.0*x1081*x242 - x1086*x2048 - x1088*x2048 + x1265 - x1304*x2124 - x1307*x2124 - x137*x2125 + x1411*x2123 + x1414*x2123 - x146*x2125 - x1516*x730 + x1520*x528 - x1548*x1917 - x1548*x1918 - x157*x2122 - x168*x2122 + x18*x2121 + x1807*x22*x807 + x1903*x738 - x1907*x2073 + x191*x2077 + x1955*x2075 + x1957 - x2033*x858 - x2033*x861 - x2053*x417 + x2057 + x2071*x27 + (1.0/32.0)*x2078 + (1.0/32.0)*x2079 - x2126*x714 - x2126*x717 - x440*x815) + x1230*x396 + x1247*x496 - x1248*x1828 + x1858 - 2*x1887 - x464*(x1264*x400 + x1387*x27 - x1391*x679 - x1418*x156 - x1418*x252 - x1419*x1929 + x1429*x279 - 1.0/16.0*x1441 - x1452*x1929 - x1756*x679 - x1757*x1929 - 1.0/16.0*x1793 + x1903*x394 - x1907*x477 - x1907*x478 - x1907*x479 - x1907*x480 + x1909*x50 - x1955*x2036 - 1.0/4.0*x2031 - x2032*x707 - 1.0/8.0*x2034 - 1.0/8.0*x2035 + x2121*x396 - x2127*x644 - x2127*x648 + x27*x397 - x730*x815);

 sum[206]=x2133;

 sum[32]=x1162;

 sum[68]=x1744;

 sum[104]=x1894;

 sum[140]=x2113;

 sum[176]=x2133;

 sum[212]=x1153*x1252 - x1155*x1256 + x1858 + x2083;

 sum[3]=x575;

 sum[39]=x959;

 sum[75]=x1135;

 sum[111]=x1209;

 sum[147]=x1240;

 sum[183]=x1243;

 sum[9]=x959;

 sum[45]=-2*x1461 - x1462*x950 + x1497;

 sum[81]=x1605;

 sum[117]=x1696;

 sum[153]=x1731;

 sum[189]=x1747;

 sum[15]=x1135;

 sum[51]=x1605;

 sum[87]=-x1799*x4 + x1800*x4 + x1826;

 sum[123]=x1863;

 sum[159]=x1886;

 sum[195]=x1899;

 sum[21]=x1209;

 sum[57]=x1696;

 sum[93]=x1863;

 sum[129]=(1.0/3.0)*x102*x950 + x1165*x1968 + x1989;

 sum[165]=x2095;

 sum[201]=x2115;

 sum[27]=x1240;

 sum[63]=x1731;

 sum[99]=x1886;

 sum[135]=x2095;

 sum[171]=-x1156*x1992 - x17*x1990*x986 + x2128*x4 + x2129;

 sum[207]=x2135;

 sum[33]=x1243;

 sum[69]=x1747;

 sum[105]=x1899;

 sum[141]=x2115;

 sum[177]=x2135;

 sum[213]=-x1990*x994 + x1995 + x2138;

 sum[4]=-2*x608 + x611;

 sum[40]=x993;

 sum[76]=x1159;

 sum[112]=x1240;

 sum[148]=x1251;

 sum[184]=x1255;

 sum[10]=x993;

 sum[46]=-x1498*x17 + x1499*x17 + x1502 + x1510;

 sum[82]=x1668;

 sum[118]=x1710;

 sum[154]=x1737;

 sum[190]=x1751;

 sum[16]=x1159;

 sum[52]=x1668;

 sum[88]=-x1156*x1828 + x1502 - 2*x1827 + x1830;

 sum[124]=x1873;

 sum[160]=x1888;

 sum[196]=x1901;

 sum[22]=x1240;

 sum[58]=x1710;

 sum[94]=x1873;

 sum[130]=-x1122*x1992 + x1164*x982 + x1167*x606 - x17*x1991 + x17*x1995 + x1996;

 sum[166]=x2106;

 sum[202]=x2119;

 sum[28]=x1251;

 sum[64]=x1737;

 sum[100]=x1888;

 sum[136]=x2106;

 sum[172]=(1.0/3.0)*x111*x1156 + x1152*x1245 + x1246*x2102 + x1247*x606 + x1996;

 sum[208]=x2136;

 sum[34]=x1255;

 sum[70]=x1751;

 sum[106]=x1901;

 sum[142]=x2119;

 sum[178]=x2136;

 sum[214]=-x1160*x2130 + x17*x1994 + x1996 + x2100;

 sum[5]=x575;

 sum[41]=x996;

 sum[77]=x1162;

 sum[113]=x1243;

 sum[149]=x1255;

 sum[185]=x1258;

 sum[11]=x996;

 sum[47]=x1497 - x1498 + x1499;

 sum[83]=x1671;

 sum[119]=x1712;

 sum[155]=x1741;

 sum[191]=x1752;

 sum[17]=x1162;

 sum[53]=x1671;

 sum[89]=-x1799 + x1800 + x1826;

 sum[125]=x1877;

 sum[161]=x1891;

 sum[197]=x1902;

 sum[23]=x1243;

 sum[59]=x1712;

 sum[95]=x1877;

 sum[131]=x1989 - x1991 + x1995;

 sum[167]=x2110;

 sum[203]=x2120;

 sum[29]=x1255;

 sum[65]=x1741;

 sum[101]=x1891;

 sum[137]=x2110;

 sum[173]=-x1156*x2130 + x2128 + x2129;

 sum[209]=x2137;

 sum[35]=x1258;

 sum[71]=x1752;

 sum[107]=x1902;

 sum[143]=x2120;

 sum[179]=x2137;

 sum[215]=x1994 + x2138;
       
        return sum;
	}
    
    int getnF()
    {
        return nF;
    }
    
    int getnP()
    {
        return nP;
    }

};
#endif